var documenterSearchIndex = {"docs":
[{"location":"models/brusselator.html#","page":"Brusselator","title":"Brusselator","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/brusselator/brusselator.jl\"","category":"page"},{"location":"models/brusselator.html#","page":"Brusselator","title":"Brusselator","text":"module brusselator\nusing ReachabilityAnalysis\n\nusing ReachabilityAnalysis\n\nconst A = 1.0\nconst B = 1.5\nconst B1 = B + 1\n\n@taylorize function brusselator!(du, u, p, t)\n    x, y = u\n    x² = x * x\n    aux = x² * y\n    du[1] = A + aux - B1*x\n    du[2] = B*x - aux\n    return du\nend\n\nfunction model(X0)\n    S = @system(x' = brusselator!(x), dim:2)\n    return IVP(S, X0)\nend\nend #module","category":"page"},{"location":"models/jet_engine.html#","page":"Jet Engine","title":"Jet Engine","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/jet_engine/jet_engine.jl\"","category":"page"},{"location":"models/jet_engine.html#","page":"Jet Engine","title":"Jet Engine","text":"module jet_engine\nusing ReachabilityAnalysis\n@taylorize function jet_engine!(dx, x, params, t)\n    dx[1] = -x[2] - 1.5 * x[1]^2 - 0.5 * x[1]^3 - 0.5\n    dx[2] = 3 * x[1] - x[2]\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = jet_engine!(x), dim:2)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/pde.html#","page":"PDE","title":"PDE","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/pde/pde.jl\"","category":"page"},{"location":"models/pde.html#","page":"PDE","title":"PDE","text":"module pde\n\nusing ReachabilityAnalysis, MAT\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"pde.mat\")","category":"page"},{"location":"models/pde.html#","page":"PDE","title":"PDE","text":"system matrix","category":"page"},{"location":"models/pde.html#","page":"PDE","title":"PDE","text":"A = float(read(file, \"A\"))  # the matrix has Int entries","category":"page"},{"location":"models/pde.html#","page":"PDE","title":"PDE","text":"input matrix","category":"page"},{"location":"models/pde.html#","page":"PDE","title":"PDE","text":"B = read(file, \"B\")","category":"page"},{"location":"models/pde.html#","page":"PDE","title":"PDE","text":"state domain","category":"page"},{"location":"models/pde.html#","page":"PDE","title":"PDE","text":"X = Universe(84)","category":"page"},{"location":"models/pde.html#","page":"PDE","title":"PDE","text":"input domain","category":"page"},{"location":"models/pde.html#","page":"PDE","title":"PDE","text":"U = BallInf([0.75], .25)\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/lorenz.html#","page":"Lorenz","title":"Lorenz","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/lorenz/lorenz.jl\"","category":"page"},{"location":"models/lorenz.html#","page":"Lorenz","title":"Lorenz","text":"module lorenz\nusing ReachabilityAnalysis\n@taylorize function lorenz!(dx, x, params, t)\n    σ, β, ρ = 10.0, 8.0/3.0, 28.0\n    dx[1] = σ * (x[2] - x[1])\n    dx[2] = x[1] * (ρ - x[3]) - x[2]\n    dx[3] = x[1] * x[2] - β * x[3]\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = lorenz!(x), dim:3)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/coupled_vanderpol.html#","page":"Coupled VanDerPol","title":"Coupled VanDerPol","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/coupled_vanderpol/coupled_vanderpol.jl\"","category":"page"},{"location":"models/coupled_vanderpol.html#","page":"Coupled VanDerPol","title":"Coupled VanDerPol","text":"module coupled_vanderpol\nusing ReachabilityAnalysis\n\nusing ReachabilityAnalysis\n\n@taylorize function coupled_vanderpol!(du, u, p, t)\n    du[1] = u[2]\n    du[2] = (1.0 - u[1]^2)*u[2] - u[1] + (u[3]-u[1])\n    du[3] = u[4]\n    du[4] = (1.0 - u[3]^2)*u[4] - u[3] + (u[1]-u[3])\n    return du\nend\n\nfunction model(X0)\n    S = @system(x' = coupled_vanderpol!(x), dim:4)\n    return IVP(S, X0)\nend\nend #module","category":"page"},{"location":"models/fom.html#","page":"Fom","title":"Fom","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/fom/fom.jl\"","category":"page"},{"location":"models/fom.html#","page":"Fom","title":"Fom","text":"module fom\n\nusing ReachabilityAnalysis, MAT\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"fom.mat\")","category":"page"},{"location":"models/fom.html#","page":"Fom","title":"Fom","text":"system matrix","category":"page"},{"location":"models/fom.html#","page":"Fom","title":"Fom","text":"A = float(read(file, \"A\"))  # the matrix has Int entries","category":"page"},{"location":"models/fom.html#","page":"Fom","title":"Fom","text":"input matrix","category":"page"},{"location":"models/fom.html#","page":"Fom","title":"Fom","text":"B = read(file, \"B\")","category":"page"},{"location":"models/fom.html#","page":"Fom","title":"Fom","text":"state domain","category":"page"},{"location":"models/fom.html#","page":"Fom","title":"Fom","text":"X = Universe(1006)","category":"page"},{"location":"models/fom.html#","page":"Fom","title":"Fom","text":"input domain","category":"page"},{"location":"models/fom.html#","page":"Fom","title":"Fom","text":"U = BallInf([0.0], 1.0)\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/hybrid_overview.html#Hybrid-models-1","page":"Overview","title":"Hybrid models","text":"","category":"section"},{"location":"models/hybrid_overview.html#","page":"Overview","title":"Overview","text":"Here are the models with hybrid systems.","category":"page"},{"location":"models/hybrid_overview.html#","page":"Overview","title":"Overview","text":"Name State dim Input dim Safesty Property Application Domain Nominal Runtime\nbouncing_ball 2 - - - \nbouncingballnonlinear 2 - - - \ncardiac_cell 3 - - - \nclocked_thermostat 2 - - - \nfiltered_oscillator 3 - - - \nlinear_switching 1 - - - \nnavigation_system 4 - - - \npowertrain_control 5 - - - \nspiking_neuron 2 - - - \nthermostat 1 - - - ","category":"page"},{"location":"models/spiking_neuron.html#","page":"Spiking Neuron","title":"Spiking Neuron","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/spiking_neuron/spiking_neuron.jl\"","category":"page"},{"location":"models/spiking_neuron.html#","page":"Spiking Neuron","title":"Spiking Neuron","text":"module spiking_neuron\nusing ReachabilityAnalysis, ModelingToolkit\n\n@taylorize function flow!(dx, x, params, t)\n    local a = 0.02\n    local b = 0.2\n    local I = 40\n    dx[1] = (0.04*(x[1]*x[1]) + 5*x[1]) + ((140+I)-x[2])\n    dx[2] = a*((b*x[1]) - x[2])\n    return dx\nend\n\nfunction spikingNeuron_model()\n    # hybrid automaton\n    HA = LightAutomaton(1)\n\n    # mode 1\n    X = HPolyhedron([HalfSpace([1.0, 0.0], 30.0)])  # x1 ≤ 30\n    m1 = @system(x' = flow!(x), dim: 2, x ∈ X)\n\n    # transition mode 1 → mode 1 (self loop)\n    add_transition!(HA, 1, 1, 1)\n    G = HPolyhedron([HalfSpace([-1.0, 0.0], -30.0)])  # x1 ≥ 30\n    A = [0.0 0.0; 0.0 1.0]\n    b = [-65.0, 8.0]\n    R11 = ConstrainedAffineMap(A, b, G)  # x1 := -65, x2 := x2 + 8\n\n    # hybrid system\n    S = HybridSystem(HA, [m1], [R11], [AutonomousSwitching()])\n\n    return S\nend\n\nfunction model(X0)\n    H = spikingNeuron_model()\n    return IVP(H, X0)\nend\nend # module","category":"page"},{"location":"models/projectile.html#","page":"Projectile","title":"Projectile","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/projectile/projectile.jl\"","category":"page"},{"location":"models/projectile.html#","page":"Projectile","title":"Projectile","text":"module projectile\nusing ReachabilityAnalysis, SparseArrays\n\n# system matrix\nA = sparse([1, 3], [2, 4], [0.5, 0.7], 4, 4)\n\n# affine term\nb = sparsevec([4], [-9.81], 4)\n\nfunction model(X0)\n    S = @system(x' = Ax + b)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/thermostat.html#","page":"Thermostat","title":"Thermostat","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/thermostat/thermostat.jl\"","category":"page"},{"location":"models/thermostat.html#","page":"Thermostat","title":"Thermostat","text":"module thermostat\n\nusing ReachabilityAnalysis, ModelingToolkit\n\nconst A1 = 40.0\nconst A2 = 30.0\nconst B = 0.5\nconst t1 = 75\nconst t2 = 65\n\nconst var = @variables t\n\nfunction thermostat_on()\n    invariant = HalfSpace(t <= t1)\n    @system(x' = -Bx + A1, x ∈ invariant)\nend\n\nfunction thermostat_off()\n    invariant = HalfSpace(t >= t2)\n    @system(x' = -Bx + A2, x ∈ invariant)\nend\n\nfunction thermostat_hybrid()\n    automaton = LightAutomaton(2)\n    add_transition!(automaton, 1, 2, 1)\n    add_transition!(automaton, 2, 1, 2)\n\n    mode1 = thermostat_on()\n    mode2 = thermostat_off()\n    modes = [mode1, mode2]\n\n    # transition on -> off\n    guard = HalfSpace(t >= t1)\n    trans1 = ConstrainedIdentityMap(1, guard)\n    # transition off -> on\n    guard = HalfSpace(t <= t2)\n    trans2 = ConstrainedIdentityMap(1, guard)\n    resetmaps = [trans1, trans2]\n\n    return HybridSystem(automaton, modes, resetmaps, [AutonomousSwitching()])\nend\n\nfunction model(X0)\n    H = thermostat_hybrid()\n    return IVP(H, X0)\nend\n\nend  # module","category":"page"},{"location":"models/filtered_oscillator.html#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/filtered_oscillator/filtered_oscillator.jl\"","category":"page"},{"location":"models/filtered_oscillator.html#","page":"-","title":"-","text":"module filtered_oscillator\n\nusing ReachabilityAnalysis\n\none_loop_iteration = false\nn0 = 4\nn1 = (one_loop_iteration ? n0 + 1 : n0)\nn = n1 + 2\nz = zeros(n1)\n\n# common flow\nA = zeros(n, n)\nA[1,1], A[2,2] = -2., -1.\nA[3,1], A[3,3] = 5., -5.\nfor i = 4 : n-1\n    A[i,i-1], A[i,i] = 5., -5.\nend\n\nfunction mode1(z)\n    b = [1.4; -0.7; z]\n    X = HPolyhedron([HalfSpace([-0.714286; -1.0; z], 0.0),  # 0.714286*x + y >= 0\n                     HalfSpace([1.0; 0.0; z], 0.0)])  # x <= 0\n    @system(x' = Ax + b, x ∈ X)\nend\n\nfunction mode2(z)\n    b = [-1.4; 0.7; z]\n    X = HPolyhedron([HalfSpace([1.0; 0.0; z], 0.0),  # x <= 0\n                     HalfSpace([0.714286; 1.0; z], 0.0)])  # 0.714286*x + y <= 0\n    @system(x' = Ax + b, x ∈ X)\nend\n\nfunction mode3(z)\n    b = [1.4; -0.7; z]\n    X = HPolyhedron([HalfSpace([-1.0; 0.0; z], 0.0),  # x >= 0\n                     HalfSpace([-0.714286; -1.0; z], 0.0)])  # 0.714286*x + y >= 0\n    @system(x' = Ax + b, x ∈ X)\nend\n\nfunction mode4(z, one_loop_iteration)\n    b = [-1.4; 0.7; z]\n    X = HPolyhedron([HalfSpace([0.714286; 1.0; z], 0.0),  # 0.714286*x + y <= 0\n                     HalfSpace([-1.0; 0.0; z], 0.0)])  # x >= 0\n\n    if one_loop_iteration\n        # k <= 2 (2.1 to avoid numerical issues)\n        addconstraint!(X, HalfSpace([zeros(n-1); 1.], 2.1))\n    end\n    @system(x' = Ax + b, x ∈ X)\nend\n\n\nfunction filtered_oscillator_hybrid(n0, one_loop_iteration)\n\n    n1 = (one_loop_iteration ? n0 + 1 : n0)\n    n = n1 + 2\n    z = zeros(n1)\n\n    # transition graph (automaton)\n    a = LightAutomaton(4)\n    add_transition!(a, 3, 4, 1)\n    add_transition!(a, 4, 2, 2)\n    add_transition!(a, 2, 1, 3)\n    add_transition!(a, 1, 3, 4)\n\n    mode1 = mode1(z)\n    mode2 = mode2(z)\n    mode3 = mode3(z)\n    mode4 = mode4(z, one_loop_iteration)\n    m = [mode1, mode2, mode3, mode4]\n\n    # transitions\n\n    # transition l3 -> l4\n    X_l3l4 = HPolyhedron([HalfSpace([-1.0; 0.0; z], 0.0),  # x >= 0\n                          HalfSpace([-0.714286; -1.0; z], 0.0),  # 0.714286*x + y >= 0\n                          HalfSpace([0.714286; 1.0; z], 0.0)])  # 0.714286*x + y <= 0\n    if one_loop_iteration\n        A_trans_34 = Matrix(1.0I, n, n)\n        A_trans_34[n, n] = 2.  # k' = k * 2\n        r1 = ConstrainedLinearMap(A_trans_34, X_l3l4)\n    else\n        r1 = ConstrainedIdentityMap(n, X_l3l4)\n    end\n\n    # transition l4 -> l2\n    X_l4l2 = HPolyhedron([HalfSpace([0.714286; 1.0; z], 0.0),  # 0.714286*x + y <= 0\n                          HalfSpace([-1.0; 0.0; z], 0.0),  # x >= 0\n                          HalfSpace([1.0; 0.0; z], 0.0)])  # x <= 0\n    r2 = ConstrainedIdentityMap(n, X_l4l2)\n\n    # transition l2 -> l1\n    X_l2l1 = HPolyhedron([HalfSpace([1.0; 0.0; z], 0.0),  # x <= 0\n                          HalfSpace([-0.714286; -1.0; z], 0.0),  # 0.714286*x + y >= 0\n                          HalfSpace([0.714286; 1.0; z], 0.0)])  # 0.714286*x + y <= 0\n    r3 = ConstrainedIdentityMap(n, X_l2l1)\n\n    # transition l1 -> l3\n    X_l1l3 = HPolyhedron([HalfSpace([-0.714286; -1.0; z], 0.0),  # 0.714286*x + y >= 0\n                          HalfSpace([-1.0; 0.0; z], 0.0),  # x >= 0\n                          HalfSpace([1.0; 0.0; z], 0.0)])  # x <= 0\n    r4 = ConstrainedIdentityMap(n, X_l1l3)\n\n    r = [r1, r2, r3, r4]\n\n    # switchings\n    s = [HybridSystems.AutonomousSwitching()]\n\n    return HybridSystem(a, m, r, s)\nend\n\nfunction model(X0; n0::Int=4, one_loop_iteration::Bool=false)\n    H = filtered_oscillator_hybrid(n0, one_loop_iteration)\n    return IVP(H, [(1, X0)])\nend\n\nend # module","category":"page"},{"location":"models/cardiac_cell.html#","page":"Cardiac Cell","title":"Cardiac Cell","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/cardiac_cell/cardiac_cell.jl\"","category":"page"},{"location":"models/cardiac_cell.html#","page":"Cardiac Cell","title":"Cardiac Cell","text":"module cardiac_cell\nusing ReachabilityAnalysis, ModelingToolkit\n\nvars = @variables u, v, t\n\n@taylorize function cardiac_cell_on!(dx, x, params, t)\n    dx[1] = -0.9 * x[1]^2 - x[1]^3 - 0.9 * x[1] - x[2] + 1\n    dx[2] = x[1] - 2 * x[2]\n    dx[3] = one(x[3])\n    return dx\nend\n\n@taylorize function cardiac_cell_off!(dx, x, params, t)\n    dx[1] = -0.9 * x[1]^2 - x[1]^3 - 0.9 * x[1] - x[2]\n    dx[2] = x[1] - 2 * x[2]\n    dx[3] = one(x[3])\n    return dx\nend\n\nfunction cardiac_cell_hybrid()\n\n    n = 2 + 1 # variables + time\n\n    automaton = LightAutomaton(2)\n    add_transition!(automaton, 1, 2, 1)\n    add_transition!(automaton, 2, 1, 2)\n\n    # mode 1 \"approaching\"\n    invariant = HalfSpace(t <= 5, vars)\n    mode1 = @system(x' = cardiac_cell_on!(x), dim:3, x ∈ invariant)\n    # mode 1 \"approaching\"\n    invariant = HalfSpace(t <= 20, vars)\n    mode2 = @system(x' = cardiac_cell_off!(x), dim:3, x ∈ invariant)\n    modes = [mode1, mode2]\n\n    reset = Dict(n => 0.)\n\n    # transition on -> off\n    guard = HalfSpace(t >= 5)\n    trans1 = ConstrainedResetMap(n, guard, reset)\n    # transition off -> on\n    guard = HalfSpace(t >= 20)\n    trans2 = ConstrainedResetMap(n, guard, reset)\n    resetmaps = [trans1, trans2]\n\n    return HybridSystem(automaton, modes, resetmaps, [AutonomousSwitching()])\nend\n\nfunction model(X0)\n    H = cardiac_cell_hybrid()\n    return IVP(H, X0)\nend\nend # module","category":"page"},{"location":"usage.html#Usage-1","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"usage.html#Utility-functions-1","page":"Usage","title":"Utility functions","text":"","category":"section"},{"location":"usage.html#","page":"Usage","title":"Usage","text":"","category":"page"},{"location":"usage.html#","page":"Usage","title":"Usage","text":"Modules = [ReachabilityModels]","category":"page"},{"location":"usage.html#ReachabilityModels.@relpath-Tuple{String}","page":"Usage","title":"ReachabilityModels.@relpath","text":"@relpath(name) Return the absolute path to file name relative to the executing script.\n\nInput\n\nname – file name\n\nOutput\n\nA string.\n\nNotes\n\nThis macro is equivalent to joinpath(@__DIR__, name). The @relpath macro is used in model scripts to load data files relative to the location of the model, without having to change the directory of the Julia session. For instance, suppose that the folder /home/projects/models contains the script my_model.jl, and suppose that the data file my_data.dat located in the same directory is required to be loaded by my_model.jl. Then,\n\n# suppose the working directory is /home/julia/ and so we ran the script as\n# julia -e \"include(\"../projects/models/my_model.jl\")\"\n# in the model file /home/projects/models/my_model.jl we write:\nd = open(@relpath \"my_data.dat\")\n# do stuff with d\n\nIn this example, the macro @relpath \"my_data.dat\" evaluates to the string /home/projects/models/my_data.dat. If the script my_model.jl only had d = open(\"my_data.dat\"), without @relpath, this command would fail as julia would have looked for my_data.dat in the working directory, resulting in an error that the file /home/julia/my_data.dat is not found.\n\n\n\n\n\n","category":"macro"},{"location":"models/iss.html#","page":"ISS","title":"ISS","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/iss/iss.jl\"","category":"page"},{"location":"models/iss.html#","page":"ISS","title":"ISS","text":"module iss\n\nusing ReachabilityAnalysis, MAT\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"iss.mat\")","category":"page"},{"location":"models/iss.html#","page":"ISS","title":"ISS","text":"system matrix","category":"page"},{"location":"models/iss.html#","page":"ISS","title":"ISS","text":"A = read(file, \"A\")","category":"page"},{"location":"models/iss.html#","page":"ISS","title":"ISS","text":"input matrix","category":"page"},{"location":"models/iss.html#","page":"ISS","title":"ISS","text":"B = read(file, \"B\")","category":"page"},{"location":"models/iss.html#","page":"ISS","title":"ISS","text":"state domain","category":"page"},{"location":"models/iss.html#","page":"ISS","title":"ISS","text":"X = Universe(270)","category":"page"},{"location":"models/iss.html#","page":"ISS","title":"ISS","text":"input domain","category":"page"},{"location":"models/iss.html#","page":"ISS","title":"ISS","text":"U = Hyperrectangle([0.05, 0.9, 0.95], [0.05, 0.1, 0.05])\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/lotka_volterra.html#","page":"Lotka-Volterra","title":"Lotka-Volterra","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/lotka_volterra/lotka_volterra.jl\"","category":"page"},{"location":"models/lotka_volterra.html#","page":"Lotka-Volterra","title":"Lotka-Volterra","text":"module lotka_volterra\nusing ReachabilityAnalysis\n@taylorize function lotka_volterra!(du, u, p, t)\n    local α, β, γ, δ = 1.5, 1.0, 3.0, 1.0\n    du[1] = u[1] * (α - β*u[2])\n    du[2] = -u[2] * (γ - δ*u[1])\n    return du\nend\n\nfunction model(X0)\n    S = @system(x' = lotka_volterra!(x), dim:2)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/spring_pendulum.html#","page":"Spring Pendulum","title":"Spring Pendulum","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/spring_pendulum/spring_pendulum.jl\"","category":"page"},{"location":"models/spring_pendulum.html#","page":"Spring Pendulum","title":"Spring Pendulum","text":"module spring_pendulum\nusing ReachabilityAnalysis\n@taylorize function spring_pendulum!(du, u, p, t)\n    local g, k, L = 9.8, 2.0, 1.0\n    du[1] = u[3]\n    du[2] = u[4]\n    du[3] = ((u[1] * (u[4]*u[4])) + g*cos(u[2])) - k*(u[1]-L)\n    du[4] = -((2*u[3]*u[4]) + g*sin(u[2]))/(u[1])\n\n    # change of variables: r <- r - L\n    #du[3] = (((u[1]+L) * (u[4]*u[4])) + g*cos(u[2])) - k*(u[1])\n    #du[4] = -((2*u[3]*u[4]) + g*sin(u[2]))/(u[1]+L)\n\n    return du\nend\n\nfunction model(X0)\n    S = @system(x' = spring_pendulum!(x), dim:4)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/heat.html#","page":"Heat","title":"Heat","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/heat/heat.jl\"","category":"page"},{"location":"models/heat.html#","page":"Heat","title":"Heat","text":"module heat\n\nusing ReachabilityAnalysis, MAT, SparseArrays\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"heat.mat\")","category":"page"},{"location":"models/heat.html#","page":"Heat","title":"Heat","text":"system matrix","category":"page"},{"location":"models/heat.html#","page":"Heat","title":"Heat","text":"A = read(file, \"A\")","category":"page"},{"location":"models/heat.html#","page":"Heat","title":"Heat","text":"input matrix","category":"page"},{"location":"models/heat.html#","page":"Heat","title":"Heat","text":"B = sparse([67], [1], [1.0], size(A, 1), 1)","category":"page"},{"location":"models/heat.html#","page":"Heat","title":"Heat","text":"state domain","category":"page"},{"location":"models/heat.html#","page":"Heat","title":"Heat","text":"X = Universe(200)","category":"page"},{"location":"models/heat.html#","page":"Heat","title":"Heat","text":"input domain","category":"page"},{"location":"models/heat.html#","page":"Heat","title":"Heat","text":"U = BallInf([0.0], 0.5)\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/roessler.html#","page":"Roessler","title":"Roessler","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/roessler/roessler.jl\"","category":"page"},{"location":"models/roessler.html#","page":"Roessler","title":"Roessler","text":"module roessler\nusing ReachabilityAnalysis\n@taylorize function roessler!(du, u, p, t)\n    local a, b, c = 0.2, 0.2, 5.7\n\n    du[1] = -u[2] - u[3]\n    du[2] = u[1] + (a * u[2])\n    du[3] = b + (u[3]*(u[1] - c))\n\n    return du\nend\n\nfunction model(X0)\n    S = @system(x' = roessler!(x), dim:3)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/bouncing_ball_nonlinear.html#","page":"Nonlinear Bouncing ball","title":"Nonlinear Bouncing ball","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/bouncing_ball_nonlinear/bouncing_ball_nonlinear.jl\"","category":"page"},{"location":"models/bouncing_ball_nonlinear.html#Nonlinear-bouncing-ball-1","page":"Nonlinear Bouncing ball","title":"Nonlinear bouncing ball","text":"","category":"section"},{"location":"models/bouncing_ball_nonlinear.html#Model-1","page":"Nonlinear Bouncing ball","title":"Model","text":"","category":"section"},{"location":"models/bouncing_ball_nonlinear.html#","page":"Nonlinear Bouncing ball","title":"Nonlinear Bouncing ball","text":"using ReachabilityAnalysis, ModelingToolkit\n\n@taylorize function flow_down!(du, u, params, t)\n    du[1] = u[2]\n    du[2] = -9.8 + 0.1*(u[2])^2\n    return du\nend\n\n@taylorize function flow_up!(du, u, params, t)\n    du[1] = u[2]\n    du[2] = -9.8 - 0.1*(u[2])^2\n    return du\nend\n\nfunction bouncingBallNonlinear_model()\n    var = @variables x, v\n\n    # hybrid automaton with state variables x, v\n    HA = LightAutomaton(2)\n\n    # mode 1 (\"down\")\n    X = HPolyhedron([x ≥ 0, v ≤ 0], vars)\n    m1 = @system(x' = flow_down!(x), dim: 2, x ∈ X)\n\n    # mode 2 (\"up\")\n    X = HPolyhedron([x ≥ 0, v ≥ 0], vars)\n    m2 = @system(x' = flow_up!(x), dim: 2, x ∈ X)\n\n    # α transition down → up\n    add_transition!(HA, 1, 2, 1)\n    G = HalfSpace(x ≤ 0, vars)\n    A = [1.0 0.0; 0.0 -0.8]\n    Rα = ConstrainedLinearMap(A, G)  # v := -0.8v\n\n    # β transition up → down\n    add_transition!(HA, 2, 1, 2)\n    G = HalfSpace(v ≤ 0, vars)\n    Rβ = ConstrainedIdentityMap(2, G)\n\n    # hybrid system\n    S = HybridSystem(HA, [m1, m2], [Rα, Rβ], fill(AutonomousSwitching(), 2))\n\n    return S\nend\n\nend","category":"page"},{"location":"models/powertrain_control.html#","page":"Powertrain Control","title":"Powertrain Control","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/powertrain_control/powertrain_control.jl\"","category":"page"},{"location":"models/powertrain_control.html#","page":"Powertrain Control","title":"Powertrain Control","text":"module powertrain_control\nusing ReachabilityAnalysis, ModelingToolkit\n#using Polyhedra, CDDLib # ??\n\nvars = @variables p, lam, pe, i, t\n\n@taylorize function startup!(dx, x, params, t)\n    p, lam, pe, i = x\n    dx[1] = 0.41328*(2*247*(-2.3421*p*p+2.7799*p-0.3273)-0.9*(-3.66+0.08979*104.71975511*p-0.0337*104.71975511*p*p+0.0001*104.71975511*104.71975511*p))\n    dx[2] = 4*(13.893-35.2518*1*((1/14.7)*(-3.66+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))+20.7364*1*1*((1/14.7)*(-3.66+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))*((1/14.7)*(-3.66+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))+2.6287*(0.9*(-3.66+0.08979*104.71975511*p-0.0337*104.71975511*p*p+0.0001*p*104.71975511*104.71975511))-1.592*(0.9*(-3.66+0.08979*104.71975511*p-0.0337*104.71975511*p*p+0.0001*p*104.71975511*104.71975511))*1*((1/14.7)*(-3.66+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))-lam)\n    dx[3] = 0.41328*(2*1*(247)*(-2.3421*p*p+2.7799*p-0.3273)-(-3.66+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))\n    dx[4] = zero(i)\n    return dx\nend\n\n@taylorize function normal!(dx, x, params, t)\n    p, lam, pe, i = x\n    dx[1] = 0.41328*(2*1*(247)*(-2.3421*p*p+2.7799*p-0.3273)-(-3.66+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))\n    dx[2] = 4*(13.893-35.2518*1*((1/14.7)*(1+ivalue+0.04*(1*lam-14.7))*(-0.366+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))+20.7364*1*1*((1/14.7)*(1+ivalue+0.04*(1*lam-14.7))*(-0.366+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))*((1/14.7)*(1+ivalue+0.04*(1*lam-14.7))*(-0.366+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))+2.6287*(0.9*(-0.366+0.08979*104.71975511*p-0.0337*104.71975511*p*p+0.0001*p*104.71975511*104.71975511))-1.592*(0.9*(-0.366+0.08979*104.71975511*p-0.0337*104.71975511*p*p+0.0001*p*104.71975511*104.71975511)) *1*((1/14.7)*(1+ivalue+0.04*(1*lam-14.7))*(-0.366+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))-lam)\n    dx[3] = 0.41328*(2*1*(247.0)*(-2.3421*p*p+2.7799*p-0.3273)-(-0.366+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))\n    dx[4] = 0.14*(1*lam-14.7)\n    return dx\nend\n\nfunction powertrain_control_hybrid()\n    n = 4 + 1 # variables\n\n    automaton = LightAutomaton(2)\n    add_transition!(automaton, 1, 2, 1)\n\n    # mode 1 \"startup\"\n    invariant = HPolyhedron([HalfSpace(t >= 9.5, vars), HalfSpace(t <= 20, vars)])\n    mode1 = @system(x' = startup!(x), dim:5, x ∈ invariant)\n    # mode 1 \"normal\"\n    invariant = Universe(n)\n    mode2 = @system(x' = normal!(x), dim:5, x ∈ invariant)\n    modes = [mode1, mode2]\n\n    reset = Dict(n => 0.)\n\n    # transition startup -> normal\n    guard = HalfSpace(t >= 9.5, vars)\n    trans1 = ConstrainedResetMap(n, guard, reset)\n    resetmaps = [trans1]\n\n    return HybridSystem(automaton, modes, resetmaps, [AutonomousSwitching()])\nend\n\nfunction model(X0)\n    H = powertrain_control_hybrid()\n    return IVP(H, [(1, X0)])\nend\nend # module","category":"page"},{"location":"models/mna5.html#","page":"MNA5","title":"MNA5","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/mna5/mna5.jl\"","category":"page"},{"location":"models/mna5.html#","page":"MNA5","title":"MNA5","text":"module mna5\n\nusing ReachabilityAnalysis, MAT, SparseArrays\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"mna5.mat\")","category":"page"},{"location":"models/mna5.html#","page":"MNA5","title":"MNA5","text":"system matrix","category":"page"},{"location":"models/mna5.html#","page":"MNA5","title":"MNA5","text":"A = sparse(read(file, \"A\"))","category":"page"},{"location":"models/mna5.html#","page":"MNA5","title":"MNA5","text":"affine term","category":"page"},{"location":"models/mna5.html#","page":"MNA5","title":"MNA5","text":"b = sparsevec(19:27, [fill(-0.1, 5); fill(-0.2, 4)], 10913)\n\nfunction model(X0)\n    S = @system(x' = Ax + b)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/mna1.html#","page":"MNA1","title":"MNA1","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/mna1/mna1.jl\"","category":"page"},{"location":"models/mna1.html#","page":"MNA1","title":"MNA1","text":"module mna1\n\nusing ReachabilityAnalysis, MAT, SparseArrays\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"mna1.mat\")","category":"page"},{"location":"models/mna1.html#","page":"MNA1","title":"MNA1","text":"system matrix","category":"page"},{"location":"models/mna1.html#","page":"MNA1","title":"MNA1","text":"A = sparse(read(file, \"A\"))","category":"page"},{"location":"models/mna1.html#","page":"MNA1","title":"MNA1","text":"affine term","category":"page"},{"location":"models/mna1.html#","page":"MNA1","title":"MNA1","text":"b = sparsevec(570:578, [fill(-0.1, 5); fill(-0.2, 4)], 578)\n\nfunction model(X0)\n    S = @system(x' = Ax + b)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/beam.html#","page":"Beam","title":"Beam","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/beam/beam.jl\"","category":"page"},{"location":"models/beam.html#","page":"Beam","title":"Beam","text":"module beam\n\nusing ReachabilityAnalysis, MAT\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"beam.mat\")","category":"page"},{"location":"models/beam.html#","page":"Beam","title":"Beam","text":"system matrix","category":"page"},{"location":"models/beam.html#","page":"Beam","title":"Beam","text":"A = read(file, \"A\")","category":"page"},{"location":"models/beam.html#","page":"Beam","title":"Beam","text":"input matrix","category":"page"},{"location":"models/beam.html#","page":"Beam","title":"Beam","text":"B = read(file, \"B\")","category":"page"},{"location":"models/beam.html#","page":"Beam","title":"Beam","text":"state domain","category":"page"},{"location":"models/beam.html#","page":"Beam","title":"Beam","text":"X = Universe(348)","category":"page"},{"location":"models/beam.html#","page":"Beam","title":"Beam","text":"input domain","category":"page"},{"location":"models/beam.html#","page":"Beam","title":"Beam","text":"U = BallInf([0.9], 0.1)\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/vanderpol.html#","page":"VanDerPol","title":"VanDerPol","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/vanderpol/vanderpol.jl\"","category":"page"},{"location":"models/vanderpol.html#","page":"VanDerPol","title":"VanDerPol","text":"module vanderpol\nusing ReachabilityAnalysis\n@taylorize function vanderpol!(dx, x, params, t)\n    local μ = 1.0\n    dx[1] = x[2]\n    dx[2] = (μ * x[2]) * (1 - x[1]^2) - x[1]\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = vanderpol!(x), dim:2)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/steam_governor.html#","page":"Steam Governor","title":"Steam Governor","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/steam_governor/steam_governor.jl\"","category":"page"},{"location":"models/steam_governor.html#","page":"Steam Governor","title":"Steam Governor","text":"module steam_governor\nusing ReachabilityAnalysis\n@taylorize function steam_governor!(du, u, p, t)\n    local ϵ = 3.0\n    local α = 1.0\n    local β = 1.0\n\n    du[1] = u[2]\n    du[2] = u[3]^2 * sin(u[1]) * cos(u[1]) - sin(u[1]) - ϵ*u[2]\n    du[3] = α*(cos(u[1]) - β)\n\n    return du\nend\n\nfunction model(X0)\n    S = @system(x' = steam_governor!(x), dim:3)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/biomodel7d.html#","page":"Biomodel 7d","title":"Biomodel 7d","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/biomodel7d/biomodel7d.jl\"","category":"page"},{"location":"models/biomodel7d.html#","page":"Biomodel 7d","title":"Biomodel 7d","text":"module biomodel7d\nusing ReachabilityAnalysis\n\n@taylorize function biomodel7d!(dx, x, p, t)\n    dx[1] = -0.4 * x[1] + 5.0 * x[3] * x[4]\n    dx[2] = 0.4 * x[1] - x[2]\n    dx[3] = x[2] - 5.0 * x[3] * x[4]\n    dx[4] = 5.0 * x[5] * x[6] - 5.0 * x[3] * x[4]\n    dx[5] = -5.0 * x[5] * x[6] + 5.0 * x[3] * x[4]\n    dx[6] = 0.5 * x[7] - 5.0 * x[5] * x[6]\n    dx[7] = -0.5 * x[7] + 5.0 * x[5] * x[6]\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = biomodel7d!(x), dim:7)\n    return IVP(S, X0)\nend\nend #module","category":"page"},{"location":"models/doublegyre.html#","page":"Double Gyre","title":"Double Gyre","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/doublegyre/doublegyre.jl\"","category":"page"},{"location":"models/doublegyre.html#","page":"Double Gyre","title":"Double Gyre","text":"module doublegyre\nusing ReachabilityAnalysis\n@taylorize function doublegyre!(dx, x, params, t)\n    local A = 0.1\n    dx[1] = -π*A*sin(π*x[1])*cos(π*x[2])\n    dx[2] = π*A*cos(π*x[1])*sin(π*x[2])\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = doublegyre!(x), dim:2)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/bouncing_ball.html#","page":"Bouncing ball","title":"Bouncing ball","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/bouncing_ball/bouncing_ball.jl\"","category":"page"},{"location":"models/bouncing_ball.html#Bouncing-ball-1","page":"Bouncing ball","title":"Bouncing ball","text":"","category":"section"},{"location":"models/bouncing_ball.html#Model-1","page":"Bouncing ball","title":"Model","text":"","category":"section"},{"location":"models/bouncing_ball.html#","page":"Bouncing ball","title":"Bouncing ball","text":"We model the bouncing ball as a hybrid automaton with one location and a self-loop. See for example [LG09] pp. 79-83.","category":"page"},{"location":"models/bouncing_ball.html#","page":"Bouncing ball","title":"Bouncing ball","text":"using ReachabilityAnalysis, ModelingToolkit\n\nfunction _bouncing_ball()\n\n    var = @variables x, y\n\n    # \"falling\" mode with invariant x >= 0\n    invariant = HalfSpace(x ≥ 0, var)\n    flow = @system(z' = [0.0 1.0; 0.0 0.0] * z + [0.0, -9.81], z ∈ invariant)\n\n    # guard x == 0 && v ≤ 0\n    guard = HPolyhedron([0 ≤ x, x ≤ 0, v ≤ 0], var)\n\n    # reset map v⁺ := -cv\n    assignment = ConstrainedLinearMap([1.0 0.0; 0.0 -0.75], guard)\n\n    # initial-value problem\n    return HybridSystem(flow, assignment)\nend","category":"page"},{"location":"models/bouncing_ball.html#References-1","page":"Bouncing ball","title":"References","text":"","category":"section"},{"location":"models/bouncing_ball.html#","page":"Bouncing ball","title":"Bouncing ball","text":"[LG09]: Le Guernic, Colas. Reachability analysis of hybrid systems with linear continuous dynamics. Diss. 2009.","category":"page"},{"location":"overview.html#Models-1","page":"Overview","title":"Models","text":"","category":"section"},{"location":"overview.html#","page":"Overview","title":"Overview","text":"Here is a table showing the number of models for each type of system.","category":"page"},{"location":"overview.html#","page":"Overview","title":"Overview","text":"Linear Nonlinear Hybrid Total\n21 18 10 39","category":"page"},{"location":"models/building.html#","page":"Building","title":"Building","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/building/building.jl\"","category":"page"},{"location":"models/building.html#","page":"Building","title":"Building","text":"module building\n\nusing ReachabilityAnalysis, MAT\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"building.mat\")","category":"page"},{"location":"models/building.html#","page":"Building","title":"Building","text":"system matrix","category":"page"},{"location":"models/building.html#","page":"Building","title":"Building","text":"A = read(file, \"A\")","category":"page"},{"location":"models/building.html#","page":"Building","title":"Building","text":"input matrix","category":"page"},{"location":"models/building.html#","page":"Building","title":"Building","text":"B = read(file, \"B\")","category":"page"},{"location":"models/building.html#","page":"Building","title":"Building","text":"state domain","category":"page"},{"location":"models/building.html#","page":"Building","title":"Building","text":"X = Universe(48)","category":"page"},{"location":"models/building.html#","page":"Building","title":"Building","text":"input domain","category":"page"},{"location":"models/building.html#","page":"Building","title":"Building","text":"U = BallInf([0.5], 0.3)\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"index.html#ReachabilityModels.jl-1","page":"Home","title":"ReachabilityModels.jl","text":"","category":"section"},{"location":"references.html#References-1","page":"References","title":"References","text":"","category":"section"},{"location":"about.html#About-1","page":"About","title":"About","text":"","category":"section"},{"location":"models/robot_arm.html#","page":"Robot Arm","title":"Robot Arm","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/robot_arm/robot_arm.jl\"","category":"page"},{"location":"models/robot_arm.html#","page":"Robot Arm","title":"Robot Arm","text":"module robot_arm\nusing ReachabilityAnalysis\n@taylorize function robot_arm!(dx, x, params, t)\n    dx[1] = x[3]\n    dx[2] = x[4]\n    dx[3] = (-2x[2] * x[3] * x[4] - 2x[1] - 2x[3] + 4) / (x[2]^2 + 1)\n    dx[4] = x[2] * x[3]^2 - x[2] - x[4] + 1\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = robot_arm!(x), dim:4)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/buckling_column.html#","page":"Bucking column","title":"Bucking column","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/buckling_column/buckling_column.jl\"","category":"page"},{"location":"models/buckling_column.html#","page":"Bucking column","title":"Bucking column","text":"module buckling_column\nusing ReachabilityAnalysis\n@taylorize function buckling_column!(dx, x, params, t)\n    dx[1] = x[2]\n    dx[2] = 2 * x[1] - x[1]^3 - 0.2 * x[2] + 0.1\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = buckling_column!(x), dim:2)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/five_dim_sys.html#","page":"Five Dim System","title":"Five Dim System","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/five_dim_sys/five_dim_sys.jl\"","category":"page"},{"location":"models/five_dim_sys.html#","page":"Five Dim System","title":"Five Dim System","text":"module five_dim_sys\nusing ReachabilityAnalysis\n# system matrix\nD = [-1.0 -4.0  0.0  0.0  0.0;\n      4.0 -1.0  0.0  0.0  0.0;\n      0.0  0.0 -3.0  1.0  0.0;\n      0.0  0.0 -1.0 -3.0  0.0;\n      0.0  0.0  0.0  0.0 -2.0]\nP = [ 0.6 -0.1  0.1  0.7 -0.2;\n     -0.5  0.7 -0.1 -0.8  0.0;\n      0.9 -0.5  0.3 -0.6  0.1;\n      0.5 -0.7  0.5  0.6  0.3;\n      0.8  0.7  0.6 -0.3  0.2]\nA = P * D * inv(P)\n\n# state domain\nX = Universe(5)\n\n# input domain\nU = Ball2(zeros(5), 0.01)\n\nfunction model(X0)\n    S = @system(x' = Ax + u, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/linear_overview.html#Linear-models-1","page":"Overview","title":"Linear models","text":"","category":"section"},{"location":"models/linear_overview.html#","page":"Overview","title":"Overview","text":"Here are the models with linear dynamics.","category":"page"},{"location":"models/linear_overview.html#","page":"Overview","title":"Overview","text":"Name State dim Input dim Safety Property Application Domain Nominal Runtime (sec)\nbeam 348 - - - \nbouncing_ball 2 - - - \nbuilding 48 - - - \ncdplayer 120 - - - \nclocked_thermostat 2 - - - \ncrane 6 - - - \nelipse 2 - - - \nfiltered_oscillator 3 - - - \nfivedimsys 5 - - - \nfom 1006 - - - \nheat 200 - - - \nhelicopter 28 - - - \niss 270 - - - \nlinear_switching 1 - - - \nmna1 578 - - - \nmna5 10913 - - - \nmotor 8 - - - \nnavigation_system 4 - - - \npde 84 - - - \nprojectile 4 - - - \nthermostat 1 - - - ","category":"page"},{"location":"models/cdplayer.html#","page":"CD Player","title":"CD Player","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/cdplayer/cdplayer.jl\"","category":"page"},{"location":"models/cdplayer.html#","page":"CD Player","title":"CD Player","text":"module cdplayer\n\nusing ReachabilityAnalysis, MAT\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"cdplayer.mat\")","category":"page"},{"location":"models/cdplayer.html#","page":"CD Player","title":"CD Player","text":"system matrix","category":"page"},{"location":"models/cdplayer.html#","page":"CD Player","title":"CD Player","text":"A = read(file, \"A\")","category":"page"},{"location":"models/cdplayer.html#","page":"CD Player","title":"CD Player","text":"input matrix","category":"page"},{"location":"models/cdplayer.html#","page":"CD Player","title":"CD Player","text":"B = read(file, \"B\")","category":"page"},{"location":"models/cdplayer.html#","page":"CD Player","title":"CD Player","text":"state domain","category":"page"},{"location":"models/cdplayer.html#","page":"CD Player","title":"CD Player","text":"X = Universe(120)","category":"page"},{"location":"models/cdplayer.html#","page":"CD Player","title":"CD Player","text":"input domain","category":"page"},{"location":"models/cdplayer.html#","page":"CD Player","title":"CD Player","text":"U = BallInf([0.0, 0.0], 1.0)\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/elipse.html#","page":"Elipse","title":"Elipse","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/elipse/elipse.jl\"","category":"page"},{"location":"models/elipse.html#","page":"Elipse","title":"Elipse","text":"module elipse\nusing ReachabilityAnalysis\nA = [3.0 -9.0;\n     4.0 -3.0]\n\nfunction model(X0)\n    S = @system(x' = Ax)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/linear_switching.html#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/linear_switching/linear_switching.jl\"","category":"page"},{"location":"models/linear_switching.html#","page":"-","title":"-","text":"module linear_switching\n\nusing ReachabilityAnalysis, ModelingToolkit\nusing SX: readsxmodel, _get_coeffs\n\nn = 5  ## state dimension\nU = Interval(-1.0, 1.0)  ## common input domain\nm = dim(U)  ## input dimension\nε = 1e-6  ## auxiliary bloating of guards for ensuring intersection\n\nfile = @relpath \"SpaceEx_linear_switching/model.xml\"\nmodel = readsxmodel(file, raw_dict=true)\nvariables = convert.(Basic, [f.args[1].args[1] for f in model[\"flows\"][1]])\ninputs = [convert(Basic, :u)]\nload_dynamics(loc) = _get_coeffs(model[\"flows\"][loc], n, m, variables, inputs)\n\nconst var = @variables t\n\nfunction mode1()\n    A, B, _ = load_dynamics(1)\n    X = HalfSpace([-1.0, 0.0, 0.0, 0.0, 0.0], -3.0 + ε)  # x1 ≥ 3\n    @system(x' = Ax + Bu, x ∈ X, u ∈ U)\nend\n\nfunction mode2()\n    A, B, c = load_dynamics(2)\n    X = HalfSpace([-1.0, 0.0, 0.0, 0.0, 0.0], -2.0 + ε)  # x1 ≥ 2\n    @system(x' = Ax + Bu, x ∈ X, u ∈ U)\nend\n\nfunction mode3()\n    A, B, _ = load_dynamics(3)\n    X = HalfSpace([-1.0, 0.0, 0.0, 0.0, 0.0], -1.0 + ε)  # x1 ≥ 1\n    @system(x' = Ax + Bu, x ∈ X, u ∈ U)\nend\n\nfunction mode4()\n    A, B, _ = load_dynamics(5)\n    X = HalfSpace([1.0, 0.0, 0.0, 0.0, 0.0], 1.0 + ε)  # x1 ≤ 1\n    @system(x' = Ax + Bu, x ∈ X, u ∈ U)\nend\n\nfunction mode5()\n    A, B, _ = load_dynamics(4)\n    X = HalfSpace([-1.0, 0.0, 0.0, 0.0, 0.0], 0.0 + ε)  # x1 ≥ 0\n    q4 = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\nend\n\nfunction linear_switching_hybrid()\n    # hybrid automaton\n    HA = LightAutomaton(5)\n\n    # transition mode 1 → mode 2\n    add_transition!(HA, 1, 2, 1)\n    G = HPolyhedron([HalfSpace([1.0, 0.0, 0.0, 0.0, 0.0], 3.0 + ε),\n                     HalfSpace([-1.0, 0.0, 0.0, 0.0, 0.0], -3.0 + ε)])  # x1 = 3\n    R12 = ConstrainedIdentityMap(5, G)\n\n    # transition mode 2 → mode 3\n    add_transition!(HA, 2, 3, 2)\n    G = HPolyhedron([HalfSpace([1.0, 0.0, 0.0, 0.0, 0.0], 2.0 + ε),\n                     HalfSpace([-1.0, 0.0, 0.0, 0.0, 0.0], -2.0 + ε)])  # x1 = 2\n    R23 = ConstrainedIdentityMap(5, G)\n\n    # transition mode 3 → mode 4\n    add_transition!(HA, 3, 4, 3)\n    G = HPolyhedron([HalfSpace([1.0, 0.0, 0.0, 0.0, 0.0], 1.0 + ε),\n                     HalfSpace([-1.0, 0.0, 0.0, 0.0, 0.0], -1.0 + ε)])  # x1 = 1\n    R34 = ConstrainedIdentityMap(5, G)\n\n    # transition mode 4 → mode 5\n    add_transition!(HA, 4, 5, 4)\n    G = HPolyhedron([HalfSpace([1.0, 0.0, 0.0, 0.0, 0.0], 0.0 + ε),\n                     HalfSpace([-1.0, 0.0, 0.0, 0.0, 0.0], -0.0 + ε)])  # x1 = 0\n    R45 = ConstrainedIdentityMap(5, G)\n\n    # transition mode 5 → mode 1\n    add_transition!(HA, 5, 1, 5)\n    G = HPolyhedron([HalfSpace([1.0, 0.0, 0.0, 0.0, 0.0], 1.0 + ε),\n                     HalfSpace([-1.0, 0.0, 0.0, 0.0, 0.0], -1.0 + ε)])  # x1 = 1\n    R51 = ConstrainedIdentityMap(5, G)\n\n    # hybrid system\n    return HybridSystem(HA, [q1, q2, q3, q4, q5], [R12, R23, R34, R45, R51],\n                        fill(AutonomousSwitching(), 5))\nend\n\nfunction model(X0)\n    H = linear_switching_hybrid()\n    return IVP(H, X0)\nend\n\nend  # module","category":"page"},{"location":"models/biomodel9d.html#","page":"Biomodel 9d","title":"Biomodel 9d","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/biomodel9d/biomodel9d.jl\"","category":"page"},{"location":"models/biomodel9d.html#","page":"Biomodel 9d","title":"Biomodel 9d","text":"module biomodel9d\nusing ReachabilityAnalysis\n\n@taylorize function biomodel9d!(dx, x, p, t)\n    dx[1] = 3.0*x[3] - x[1]*x[6]\n    dx[2] = x[4] - x[2]*x[6]\n    dx[3] = x[1]*x[6] - 3.0*x[3]\n    dx[4] = x[2]*x[6] - x[4]\n    dx[5] = 3.0*x[3] + 5.0*x[1] - x[5]\n    dx[6] = 5.0*x[5] + 3.0*x[3] + x[4] - x[6]*(x[1]+x[2]+2.0*x[8]+1.0)\n    dx[7] = 5.0*x[4] + x[2] - 0.5*x[7]\n    dx[8] = 5.0*x[7] - 2.0*x[6]*x[8] + x[9] - 0.2*x[8]\n    dx[9] = 2.0*x[6]*x[8] - x[9]\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = biomodel9d!(x), dim:9)\n    return IVP(S, X0)\nend\nend #module","category":"page"},{"location":"models/clocked_thermostat.html#","page":"Clocked Thermostat","title":"Clocked Thermostat","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/clocked_thermostat/clocked_thermostat.jl\"","category":"page"},{"location":"models/clocked_thermostat.html#","page":"Clocked Thermostat","title":"Clocked Thermostat","text":"module clocked_thermostat\n\nusing ReachabilityAnalysis, ModelingToolkit\n\nconst A1 = 40.0\nconst A2 = 30.0\nconst B = 0.5\nconst t1 = 75\nconst t2 = 65\n\nconst var′ = @variables t t′\n\nfunction thermostat_on′()\n    invariant = HalfSpace(t <= t1, var′)\n    @system(x' = [-B 0; 0 0]*x + [A1, 1], x ∈ invariant)\nend\n\nfunction thermostat_off′()\n    invariant = HalfSpace(t >= t2, var′)\n    @system(x' = [-B 0; 0 0]*x + [A2, 1], x ∈ invariant)\nend\n\nfunction thermostat_hybrid′()\n    automaton = LightAutomaton(2)\n    add_transition!(automaton, 1, 2, 1)\n    add_transition!(automaton, 2, 1, 2)\n\n    mode1 = thermostat_on′()\n    mode2 = thermostat_off′()\n    modes = [mode1, mode2]","category":"page"},{"location":"models/clocked_thermostat.html#","page":"Clocked Thermostat","title":"Clocked Thermostat","text":"transition on -> off","category":"page"},{"location":"models/clocked_thermostat.html#","page":"Clocked Thermostat","title":"Clocked Thermostat","text":"    guard = HalfSpace(t >= t1, var′)\n    trans1 = ConstrainedIdentityMap(1, guard)","category":"page"},{"location":"models/clocked_thermostat.html#","page":"Clocked Thermostat","title":"Clocked Thermostat","text":"transition off -> on","category":"page"},{"location":"models/clocked_thermostat.html#","page":"Clocked Thermostat","title":"Clocked Thermostat","text":"    guard = HalfSpace(t <= t2, var′)\n    trans2 = ConstrainedIdentityMap(1, guard)\n    resetmaps = [trans1, trans2]\n\n    return HybridSystem(automaton, modes, resetmaps, [AutonomousSwitching()])\nend\n\nfunction model(X0)\n    H = thermostat_hybrid′()\n    return IVP(H, X0)\nend\n\nend  # module","category":"page"},{"location":"models/nonlinear_overview.html#Nonlinear-models-1","page":"Overview","title":"Nonlinear models","text":"","category":"section"},{"location":"models/nonlinear_overview.html#","page":"Overview","title":"Overview","text":"Here are the models with nonlinear dynamics.","category":"page"},{"location":"models/nonlinear_overview.html#","page":"Overview","title":"Overview","text":"Name State dim Input dim Safesty Property Application Domain Nominal Runtime\nbiomodel7d 7 - - - \nbiomodel9d 9 - - - \nbouncingballnonlinear 2 - - - \nbrusselator 2 - - - \nbuckling_column 2 - - - \ncardiac_cell 3 - - - \ncoupled_vanderpol 4 - - - \ndoublegyre 2 - - - \njet_engine 2 - - - \nlorenz 3 - - - \nlotka_volterra 2 - - - \npowertrain_control 5 - - - \nrobot_arm 2 - - - \nroessler 3 - - - \nspiking_neuron 2 - - - \nspring_pendulum 4 - - - \nsteam_governor 3 - - - \nvanderpol 2 - - - ","category":"page"},{"location":"models/crane.html#","page":"Crane","title":"Crane","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/crane/crane.jl\"","category":"page"},{"location":"models/crane.html#","page":"Crane","title":"Crane","text":"module crane\nusing ReachabilityAnalysis\nA = [ 0.0           1.0               0.0   0.0   0.0           0.0;\n     -0.417533     -3.1931759963     39.24  0.0 -14.825331     11.123344;\n      0.0           0.0               0.0   1.0   0.0           0.0;\n      0.0417533     0.31931759963    -4.905 0.0   1.4825331    -1.1123344;\n      0.0638407957 -0.32473339016573  0.0   0.0  -3.7332068901 -0.7007592976;\n      0.0853437452 -0.72366802635628  0.0   0.0  -5.9714023436 -2.2736115136]\n\nfunction model(X0)\n    S = @system(x' = Ax)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/helicopter.html#","page":"Helicopter","title":"Helicopter","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/helicopter/helicopter.jl\"","category":"page"},{"location":"models/helicopter.html#Helicopter-1","page":"Helicopter","title":"Helicopter","text":"","category":"section"},{"location":"models/helicopter.html#","page":"Helicopter","title":"Helicopter","text":"note: Overview\nSystem type: linear continuous system\nState dimension: 28\nApplication domain:","category":"page"},{"location":"models/helicopter.html#","page":"Helicopter","title":"Helicopter","text":"This is a 28-dimensional controlled helicopter model from [REF].","category":"page"},{"location":"models/helicopter.html#","page":"Helicopter","title":"Helicopter","text":"using ReachabilityAnalysis, SparseArrays\n\nfunction helicopter_A()\n    A = [[0, 0, 0, 0.998574, 0.0533843, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 1, -0.00318222, 0.0595247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, -11.5705, -2.54464, -0.0636026, 0.106781, -0.0949187, 0.00710757, -5.20818, -23.1259, -4.24693, -0.710744, -1.4867, -0.0445482, 0.0343664, 0.0229902, 0.580153, 1.04755, 11.265, 2.62228, 0.382949, 0.453076, 0.0226519, 0.0125336, 0.108399, -0.160139, -6.11536, -0.0389724],\n    [0, 0, 0.439357, -1.99818, 0, 0.0166519, 0.018462, -0.00118747, -10.7788, 0.343053, -0.0349493, -3.46674, 0.0134159, -0.00650175, -0.00724803, -0.00483591, -0.152495, 2.03915, -0.169614, -0.279125, -0.00367822, -0.00167971, 0.050812, 0.0432735, -0.0623053, 0.979163, 0.0404014, 0.010697],\n    [0, 0, -2.0409, -0.458999, -0.735028, 0.0192558, -0.00459562, 0.00212036, -1.06433, -3.65916, -0.493547, -0.0595611, -1.95351, -0.0109391, -0.000271004, 0.0505639, 1.58834, 0.219924, 1.82192, 2.69319, 0.0686196, 0.08631, 0.00241543, 0.000727041, 0.640964, -0.0230167, -1.06985, -0.596675],\n    [-32.1036, 0, -0.503355, 2.29786, 0, -0.0212158, -0.0211679, 0.0158116, 12.4592, -0.353637, 0.0641365, 4.03533, -0.272153, 0.00099959, 0.00252969, 0.111633, 2.73642, -2.35454, 0.175217, 0.863082, 0.00440128, 0.00437341, -0.059795, -0.0510055, 0.609532, -1.11578, -0.0263051, -0.0337389],\n    [0.102161, 32.0578, -2.34722, -0.503612, 0.834948, 0.0212266, -0.0378797, 0.000354004, -0.76148, -5.12933, -1.13138, -0.148788, 1.38074, -0.012931, 0.00764572, 0.0737967, 1.36175, 0.150701, 2.45244, -1.44884, 0.0765163, 0.0871226, 0.00462319, 0.00263523, -0.0794019, -0.0310234, -1.22553, 0.657926],\n    [-1.91097, 1.71383, -0.00400543, -0.0574112, 0, 0.0139896, -0.000906753, -0.290514, -2.06064, -0.774846, -0.471752, -1.21389, 5.03052, 0.126408, 0.113189, -2.07842, -50.1852, 0.340666, 0.375863, -10.6412, -0.00363415, -0.0479628, 0.0305097, 0.0275842, -10.5424, -0.126841, -0.391839, 0.420788],\n    [0.126296, -0.00289825, -0.319316, 0.785202, 0.00177237, 5.84372e-06, 5.23381e-06, -9.78995e-05, -0.0726115, 0.00166629, 0.195701, 0.517339, 0.0523653, -3.35973e-06, -3.00908e-06, 5.62854e-05, -0, -0, -0, -0, -0, 0, -0, 0, 0, 0, 0, 0],\n    [-0.0181141, 0.077615, 0.710897, 2.45428, -0.012793, 4.05106e-05, 3.62825e-05, -0.000678672, 0.0104143, -0.0446232, 0.564308, -1.50732, 0.0668797, -2.32908e-05, -2.08599e-05, 0.000390189, 0, 0, -0, -0, -0, 0, -0, 0, 0, 0, 0, 0],\n    [-0.0199573, 0.00710897, 122.639, 1.7917, 0.13833, 7.26169e-07, 6.50379e-07, -1.21655e-05, -8.48115, -37.7139, -93.6582, -4.80197, -2.56739, 0.0341383, -0.0388801, 0.0446032, 0.946017, 1.70817, 18.3691, 4.27597, 0.62445, 0.738801, 0.0369369, 0.0204377, 0.17676, -0.261129, -9.9719, -0.0635496],\n    [0.00785296, 0.00392575, 0.287856, 58.0535, 0.0306981, -6.8376e-06, -6.12396e-06, 0.00011455, -17.5807, 0.557136, 0.205947, -43.2308, 0.00422708, 0.00605385, 0.00664669, -0.00913893, -0.248663, 3.32511, -0.276579, -0.455151, -0.00599782, -0.00273899, 0.0828557, 0.0705632, -0.101597, 1.59665, 0.0658798, 0.0174429],\n    [0.0114973, -0.012583, 13.8484, 22.2888, 0.0422873, 0.000197559, 0.00017694, -0.00330969, -1.74214, -5.95951, -11.333, -14.2165, -3.9448, 0.00130458, -0.00513926, 0.0864743, 2.59, 0.358615, 2.97089, 4.3916, 0.111893, 0.14074, 0.00393867, 0.00118554, 1.04518, -0.0375318, -1.74453, -0.972958],\n    [-16.9391, 0.618054, 107.921, 204.524, 0.204408, 0.0047421, 0.00424717, -0.0794442, -2.04846, -0.93199, -66.5409, -116.47, -0.561301, -0.0223122, -0.0194847, 0.243519, 4.4621, -3.83939, 0.285714, 1.40737, 0.00717686, 0.00713142, -0.0975037, -0.0831712, 0.993922, -1.81943, -0.0428939, -0.0550157],\n    [-0.54281, 7.08182, -135.012, 460.929, 0.0364986, 0.00693724, 0.0062132, -0.116219, -0.827455, 19.6222, 78.5537, -283.239, 3.06544, -0.00384762, -0.0289845, 0.187507, 2.22051, 0.245738, 3.99902, -2.36252, 0.12477, 0.142065, 0.00753873, 0.0042971, -0.129475, -0.0505877, -1.99839, 1.07284],\n    [-1.28646, 0.142279, -1.26575, 65.7431, -1.3207, -0.061856, -0.0554001, 1.03627, -4.53149, 0.368539, 0.0024871, -42.3265, 8.96223, 0.255677, 0.215513, -4.27544, -81.8337, 0.5555, 0.612895, -17.3518, -0.00592597, -0.0782097, 0.0497501, 0.0449796, -17.1907, -0.206831, -0.638946, 0.686151],\n    [0, 0, 0, 0, 0, -0.00970226, -0.00868964, 0.162541, 0, 0, 0, 0, 0, 0, 0, 0, -0.012, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-8.15316, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -3.26127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0.174412, -3.26127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-0, 0, -3.26127, -0, -0, -0, -0, 0, 0, -0, -0, 0, 0, 0, 0, -0, 0, 0, 0, -0, -8.5, -18, 0, 0, 0, 0, 0, 0],\n    [0, 0, -0, -0, 0, -0, -0, 0, -0, 0, 0, 0, 0, 0, 0, -0, -0, -0, -0, -0, 1, 0, 0, 0, 0, 0, 0, 0],\n    [-0, 0, 0, -8.15316, -0, -0, -0, 0, 0, 0, -0, 0, 0, 0, 0, -0, -0, 0, -0, 0, -0, 0, -8.5, -18, 0, 0, 0, 0],\n    [0, 0, -0, -0, 0, -0, -0, 0, -0, 0, 0, 0, 0, 0, 0, -0, 0, -0, -0, -0, -0, 0, 1, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0.699961, 0.262038, 0.15959, 0.411552, -1.70162, -0.0427567, -0.0382852, 0.703046, 16.9757, -0.115788, -0.127109, 3.59954, 0.00122974, 0.0162237, -0.010334, -0.00934236, -6.43393, 0.0426396, 0.132541, -0.142338],\n    [0, 0, 0, 0, 0, 0, 0, 0, -37.0015, 0.783589, -0.183855, -11.8696, -0.106084, -0.0263066, -0.0271181, 0.036745, 0.764602, 7.00237, -0.390319, -0.642631, -0.00570167, 0.00352225, 0.173868, 0.147911, 0.0560927, -6.64198, 0.0396022, 0.0261817],\n    [0, 0, 0, 0, 0, 0, 0, 0, 1.9914, 13.76, 2.53042, 0.0825288, 0.728265, 0.0239028, -0.0228966, 0.0153276, 0.370477, -0.412566, -6.70095, -1.32704, -0.227019, -0.267482, -0.00865099, -0.00339436, 0.0987926, 0.197714, -6.3694, -0.0119768],\n    [0, 0, 0, 0, 0, 0, 0, 0, 1.96586, -3.74313, -1.96265, 0.0189294, 11.145, -0.036002, -0.00122215, 0.602488, 11.6398, -0.407673, 1.50774, -12.8, 0.0053931, -0.0142088, -0.000915158, -0.000640326, -0.0365353, 0.012459, -0.083125, -5.47283]]\n\n    return sparse(hcat(A...)')\nend\n\nfunction model(X0)\n    # system matrix\n    A = helicopter_A()\n\n    # linear continuous system\n    S = @system(x' = Ax)\n    return IVP(S, X0)\nend","category":"page"},{"location":"models/helicopter.html#","page":"Helicopter","title":"Helicopter","text":"[REF]: XXX","category":"page"},{"location":"models/motor.html#","page":"Motor","title":"Motor","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/motor/motor.jl\"","category":"page"},{"location":"models/motor.html#","page":"Motor","title":"Motor","text":"module motor\n\nusing ReachabilityAnalysis, SparseArrays\nusing ReachabilityModels: @relpath","category":"page"},{"location":"models/motor.html#","page":"Motor","title":"Motor","text":"system matrix","category":"page"},{"location":"models/motor.html#","page":"Motor","title":"Motor","text":"I = [1, 2, 2, 3, 3, 3, 3, 4, 5, 6, 6, 7, 7, 7, 7, 8]\nJ = [2, 3, 2, 1, 2, 3, 4, 1, 6, 7, 6, 5, 6, 7, 8, 5]\nV = [1, 8487.2, -1.0865, -2592.1, -21.119, -698.91, -141399.0, 1.0, 1.0,\n     8487.2, -1.0865, -2592.1, -21.119, -698.91, -141399.0, 1.0]\nA = sparse(I, J, V)","category":"page"},{"location":"models/motor.html#","page":"Motor","title":"Motor","text":"input matrix","category":"page"},{"location":"models/motor.html#","page":"Motor","title":"Motor","text":"B = sparse([4, 8], [1, 2], [-1.0, -1.0])","category":"page"},{"location":"models/motor.html#","page":"Motor","title":"Motor","text":"state domain","category":"page"},{"location":"models/motor.html#","page":"Motor","title":"Motor","text":"X = Universe(8)","category":"page"},{"location":"models/motor.html#","page":"Motor","title":"Motor","text":"input domain","category":"page"},{"location":"models/motor.html#","page":"Motor","title":"Motor","text":"U = Hyperrectangle([0.23, 0.3], [0.07, 0.1])\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/navigation_system.html#","page":"Navigation System","title":"Navigation System","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/navigation_system/navigation_system.jl\"","category":"page"},{"location":"models/navigation_system.html#","page":"Navigation System","title":"Navigation System","text":"module navigation_system\n\nusing ReachabilityAnalysis, ModelingToolkit\n\nconst var = @variables x, y, v_x, v_y\n\nfunction mode0()\n    A = [0 0   1    0 ;\n         0 0   0    1 ;\n         0 0 -1.2  0.1;\n         0 0  0.1 -1.2]\n    B = [0, 0, -0.1, 1.2]\n    invariant = HPolyhedron([HalfSpace(x <= 1 || v_x <= 0),\n                            HalfSpace(y <= 1 || v_y <= 0)])\n    @system(x' = Ax + B, x ∈ invariant)\nend\n\nfunction mode1()\n    A = [0 0   1    0 ;\n         0 0   0    1 ;\n         0 0 -1.2  0.1;\n         0 0  0.1 -1.2]\n    B = [0, 0, -4.8, 0.4]\n    invariant = HPolyhedron([HalfSpace(x >= 1 || v_x <= 0),\n                            HalfSpace(y <= 1 || v_y <= 0)])\n    @system(x' = Ax + B, x ∈ invariant)\nend\n\nfunction mode2()\n    A = [0 0   1    0 ;\n         0 0   0    1 ;\n         0 0 -1.2  0.1;\n         0 0  0.1 -1.2]\n    B = [0, 0, 2.4, -0.2]\n    invariant = HPolyhedron([HalfSpace(x <= 1 || v_x <= 0),\n                            HalfSpace(y >= 1 || v_y >= 0)])\n    @system(x' = Ax + B, x ∈ invariant)\nend\n\nfunction mode3()\n    A = [0 0   1    0 ;\n         0 0   0    1 ;\n         0 0 -1.2  0.1;\n         0 0  0.1 -1.2]\n    B = [0, 0, 3.9, -3.9]\n    invariant = HPolyhedron([HalfSpace(x >= 1 || v_x >= 0),\n                            HalfSpace(y >= 1 || v_y >= 0)])\n    @system(x' = Ax + B, x ∈ invariant)\nend\n\nfunction navigation_system_hybrid()\n    automaton = LightAutomaton(4)\n    add_transition!(automaton, 1, 2, 1)\n    add_transition!(automaton, 2, 1, 2)\n    add_transition!(automaton, 2, 4, 3)\n    add_transition!(automaton, 4, 2, 4)\n    add_transition!(automaton, 1, 3, 5)\n    add_transition!(automaton, 3, 1, 6)\n    add_transition!(automaton, 3, 4, 7)\n    add_transition!(automaton, 4, 3, 8)\n\n    mode1 = mode0()\n    mode2 = mode1()\n    mode3 = mode2()\n    mode4 = mode3()\n    modes = [mode1, mode2, mode3, mode4]\n\n    # transition 1 -> 2\n    guard = HPolyhedron([HalfSpace(x >= 1), HalfSpace(v_x >= 0)])\n    trans1 = ConstrainedIdentityMap(4, guard)\n    # transition 2 -> 1\n    guard = HPolyhedron([HalfSpace(x <= 1), HalfSpace(v_x <= 0)])\n    trans2 = ConstrainedIdentityMap(4, guard)\n    # transition 2 -> 4\n    guard = HPolyhedron([HalfSpace(y >= 1), HalfSpace(v_y >= 0)])\n    trans3 = ConstrainedIdentityMap(4, guard)\n    # transition 4 -> 2\n    guard = HPolyhedron([HalfSpace(y <= 1), HalfSpace(v_y <= 0)])\n    trans4 = ConstrainedIdentityMap(4, guard)\n    # transition 1 -> 3\n    guard = HPolyhedron([HalfSpace(y >= 1), HalfSpace(v_y >= 0)])\n    trans5 = ConstrainedIdentityMap(4, guard)\n    # transition 3 -> 1\n    guard = HPolyhedron([HalfSpace(y <= 1), HalfSpace(v_y <= 0)])\n    trans6 = ConstrainedIdentityMap(4, guard)\n    # transition 3 -> 4\n    guard = HPolyhedron([HalfSpace(x >= 1), HalfSpace(v_x >= 0)])\n    trans7 = ConstrainedIdentityMap(4, guard)\n    # transition 4 -> 3\n    guard = HPolyhedron([HalfSpace(x <= 1), HalfSpace(v_x <= 0)])\n    trans8 = ConstrainedIdentityMap(4, guard)\n    resetmaps = [trans1, trans2, trans3, trans4, trans5, trans6, trans7, trans8]\n\n    return HybridSystem(automaton, modes, resetmaps, [AutonomousSwitching()])\nend\n\nfunction model(X0)\n    H = navigation_system_hybrid()\n    return IVP(H, [(1, X0)])\nend\n\nend  # module","category":"page"}]
}

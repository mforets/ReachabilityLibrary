var documenterSearchIndex = {"docs":
[{"location":"references/#References-1","page":"References","title":"References","text":"","category":"section"},{"location":"models/brusselator/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/brusselator/brusselator.jl\"","category":"page"},{"location":"models/brusselator/#","page":"-","title":"-","text":"module brusselator\nusing ReachabilityAnalysis\n\nusing ReachabilityAnalysis\n\nconst A = 1.0\nconst B = 1.5\nconst B1 = B + 1\n\n@taylorize function brusselator!(du, u, p, t)\n    x, y = u\n    x² = x * x\n    aux = x² * y\n    du[1] = A + aux - B1*x\n    du[2] = B*x - aux\n    return du\nend\n\nfunction model(X0)\n    S = @system(x' = brusselator!(x), dim:2)\n    return IVP(S, X0)\nend\nend #module","category":"page"},{"location":"models/jet_engine/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/jet_engine/jet_engine.jl\"","category":"page"},{"location":"models/jet_engine/#","page":"-","title":"-","text":"module jet_engine\nusing ReachabilityAnalysis\n@taylorize function jet_engine!(dx, x, params, t)\n    dx[1] = -x[2] - 1.5 * x[1]^2 - 0.5 * x[1]^3 - 0.5\n    dx[2] = 3 * x[1] - x[2]\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = jet_engine!(x), dim:2)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/spring_pendulum/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/spring_pendulum/spring_pendulum.jl\"","category":"page"},{"location":"models/spring_pendulum/#","page":"-","title":"-","text":"module spring_pendulum\nusing ReachabilityAnalysis\n@taylorize function spring_pendulum!(du, u, p, t)\n    local g, k, L = 9.8, 2.0, 1.0\n    du[1] = u[3]\n    du[2] = u[4]\n    du[3] = ((u[1] * (u[4]*u[4])) + g*cos(u[2])) - k*(u[1]-L)\n    du[4] = -((2*u[3]*u[4]) + g*sin(u[2]))/(u[1])\n\n    # change of variables: r <- r - L\n    #du[3] = (((u[1]+L) * (u[4]*u[4])) + g*cos(u[2])) - k*(u[1])\n    #du[4] = -((2*u[3]*u[4]) + g*sin(u[2]))/(u[1]+L)\n\n    return du\nend\n\nfunction model(X0)\n    S = @system(x' = spring_pendulum!(x), dim:4)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/heat/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/heat/heat.jl\"","category":"page"},{"location":"models/heat/#","page":"-","title":"-","text":"module heat\n\nusing ReachabilityAnalysis, MAT, SparseArrays\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"heat.mat\")","category":"page"},{"location":"models/heat/#","page":"-","title":"-","text":"system matrix","category":"page"},{"location":"models/heat/#","page":"-","title":"-","text":"A = read(file, \"A\")","category":"page"},{"location":"models/heat/#","page":"-","title":"-","text":"input matrix","category":"page"},{"location":"models/heat/#","page":"-","title":"-","text":"B = sparse([67], [1], [1.0], size(A, 1), 1)","category":"page"},{"location":"models/heat/#","page":"-","title":"-","text":"state domain","category":"page"},{"location":"models/heat/#","page":"-","title":"-","text":"X = Universe(200)","category":"page"},{"location":"models/heat/#","page":"-","title":"-","text":"input domain","category":"page"},{"location":"models/heat/#","page":"-","title":"-","text":"U = BallInf([0.0], 0.5)\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/pde/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/pde/pde.jl\"","category":"page"},{"location":"models/pde/#","page":"-","title":"-","text":"module pde\n\nusing ReachabilityAnalysis, MAT\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"pde.mat\")","category":"page"},{"location":"models/pde/#","page":"-","title":"-","text":"system matrix","category":"page"},{"location":"models/pde/#","page":"-","title":"-","text":"A = float(read(file, \"A\"))  # the matrix has Int entries","category":"page"},{"location":"models/pde/#","page":"-","title":"-","text":"input matrix","category":"page"},{"location":"models/pde/#","page":"-","title":"-","text":"B = read(file, \"B\")","category":"page"},{"location":"models/pde/#","page":"-","title":"-","text":"state domain","category":"page"},{"location":"models/pde/#","page":"-","title":"-","text":"X = Universe(84)","category":"page"},{"location":"models/pde/#","page":"-","title":"-","text":"input domain","category":"page"},{"location":"models/pde/#","page":"-","title":"-","text":"U = BallInf([0.75], .25)\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/lorenz/#","page":"Lorenz","title":"Lorenz","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/lorenz/lorenz.jl\"","category":"page"},{"location":"models/lorenz/#","page":"Lorenz","title":"Lorenz","text":"module lorenz\nusing ReachabilityAnalysis\n@taylorize function lorenz!(dx, x, params, t)\n    σ, β, ρ = 10.0, 8.0/3.0, 28.0\n    dx[1] = σ * (x[2] - x[1])\n    dx[2] = x[1] * (ρ - x[3]) - x[2]\n    dx[3] = x[1] * x[2] - β * x[3]\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = lorenz!(x), dim:3)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/roessler/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/roessler/roessler.jl\"","category":"page"},{"location":"models/roessler/#","page":"-","title":"-","text":"module roessler\nusing ReachabilityAnalysis\n@taylorize function roessler!(du, u, p, t)\n    local a, b, c = 0.2, 0.2, 5.7\n\n    du[1] = -u[2] - u[3]\n    du[2] = u[1] + (a * u[2])\n    du[3] = b + (u[3]*(u[1] - c))\n\n    return du\nend\n\nfunction model(X0)\n    S = @system(x' = roessler!(x), dim:3)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/bouncing_ball_nonlinear/#","page":"Bouncing ball","title":"Bouncing ball","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/bouncing_ball_nonlinear/bouncing_ball_nonlinear.jl\"","category":"page"},{"location":"models/bouncing_ball_nonlinear/#","page":"Bouncing ball","title":"Bouncing ball","text":"module bouncing_ball_nonlinear\nusing ReachabilityAnalysis, ModelingToolkit\n\nvars = @variables x, v\n\n@taylorize function flow_down!(du, u, params, t)\n    du[1] = u[2]\n    du[2] = -9.8 + 0.1*(u[2])^2\n    return du\nend\n\n@taylorize function flow_up!(du, u, params, t)\n    du[1] = u[2]\n    du[2] = -9.8 - 0.1*(u[2])^2\n    return du\nend\n\nfunction bouncingBallNonlinear_model()\n    # hybrid automaton with state variables x, v\n    HA = LightAutomaton(2)\n\n    # mode 1 (\"down\")\n    X = HPolyhedron([HalfSpace(x ≥ 0, vars),\n                     HalfSpace(v ≤ 0, vars)])\n    m1 = @system(x' = flow_down!(x), dim: 2, x ∈ X)\n\n    # mode 2 (\"up\")\n    X = HPolyhedron([HalfSpace(x ≥ 0, vars),\n                     HalfSpace(v ≥ 0, vars)])\n    m2 = @system(x' = flow_up!(x), dim: 2, x ∈ X)\n\n    # α transition down → up\n    add_transition!(HA, 1, 2, 1)\n    G = HalfSpace(x <= 0, vars)\n    A = [1.0 0.0; 0.0 -0.8]\n    Rα = ConstrainedLinearMap(A, G)  # v := -0.8v\n\n    # β transition up → down\n    add_transition!(HA, 2, 1, 2)\n    G = HalfSpace(v <= 0, vars)\n    Rβ = ConstrainedIdentityMap(2, G)\n\n    # hybrid system\n    S = HybridSystem(HA, [m1, m2], [Rα, Rβ], fill(AutonomousSwitching(), 2))\n\n    return S\nend\n\nfunction model(X0)\n    H = bouncingBallNonlinear_model()\n    return IVP(H, X0)\nend\nend # module","category":"page"},{"location":"models/coupled_vanderpol/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/coupled_vanderpol/coupled_vanderpol.jl\"","category":"page"},{"location":"models/coupled_vanderpol/#","page":"-","title":"-","text":"module coupled_vanderpol\nusing ReachabilityAnalysis\n\nusing ReachabilityAnalysis\n\n@taylorize function coupled_vanderpol!(du, u, p, t)\n    du[1] = u[2]\n    du[2] = (1.0 - u[1]^2)*u[2] - u[1] + (u[3]-u[1])\n    du[3] = u[4]\n    du[4] = (1.0 - u[3]^2)*u[4] - u[3] + (u[1]-u[3])\n    return du\nend\n\nfunction model(X0)\n    S = @system(x' = coupled_vanderpol!(x), dim:4)\n    return IVP(S, X0)\nend\nend #module","category":"page"},{"location":"models/fom/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/fom/fom.jl\"","category":"page"},{"location":"models/fom/#","page":"-","title":"-","text":"module fom\n\nusing ReachabilityAnalysis, MAT\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"fom.mat\")","category":"page"},{"location":"models/fom/#","page":"-","title":"-","text":"system matrix","category":"page"},{"location":"models/fom/#","page":"-","title":"-","text":"A = float(read(file, \"A\"))  # the matrix has Int entries","category":"page"},{"location":"models/fom/#","page":"-","title":"-","text":"input matrix","category":"page"},{"location":"models/fom/#","page":"-","title":"-","text":"B = read(file, \"B\")","category":"page"},{"location":"models/fom/#","page":"-","title":"-","text":"state domain","category":"page"},{"location":"models/fom/#","page":"-","title":"-","text":"X = Universe(1006)","category":"page"},{"location":"models/fom/#","page":"-","title":"-","text":"input domain","category":"page"},{"location":"models/fom/#","page":"-","title":"-","text":"U = BallInf([0.0], 1.0)\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/powertrain_control/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/powertrain_control/powertrain_control.jl\"","category":"page"},{"location":"models/powertrain_control/#","page":"-","title":"-","text":"module powertrain_control\nusing ReachabilityAnalysis, ModelingToolkit\n#using Polyhedra, CDDLib # ??\n\nvars = @variables p, lam, pe, i, t\n\n@taylorize function startup!(dx, x, params, t)\n    p, lam, pe, i = x\n    dx[1] = 0.41328*(2*247*(-2.3421*p*p+2.7799*p-0.3273)-0.9*(-3.66+0.08979*104.71975511*p-0.0337*104.71975511*p*p+0.0001*104.71975511*104.71975511*p))\n    dx[2] = 4*(13.893-35.2518*1*((1/14.7)*(-3.66+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))+20.7364*1*1*((1/14.7)*(-3.66+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))*((1/14.7)*(-3.66+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))+2.6287*(0.9*(-3.66+0.08979*104.71975511*p-0.0337*104.71975511*p*p+0.0001*p*104.71975511*104.71975511))-1.592*(0.9*(-3.66+0.08979*104.71975511*p-0.0337*104.71975511*p*p+0.0001*p*104.71975511*104.71975511))*1*((1/14.7)*(-3.66+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))-lam)\n    dx[3] = 0.41328*(2*1*(247)*(-2.3421*p*p+2.7799*p-0.3273)-(-3.66+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))\n    dx[4] = zero(i)\n    return dx\nend\n\n@taylorize function normal!(dx, x, params, t)\n    p, lam, pe, i = x\n    dx[1] = 0.41328*(2*1*(247)*(-2.3421*p*p+2.7799*p-0.3273)-(-3.66+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))\n    dx[2] = 4*(13.893-35.2518*1*((1/14.7)*(1+ivalue+0.04*(1*lam-14.7))*(-0.366+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))+20.7364*1*1*((1/14.7)*(1+ivalue+0.04*(1*lam-14.7))*(-0.366+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))*((1/14.7)*(1+ivalue+0.04*(1*lam-14.7))*(-0.366+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))+2.6287*(0.9*(-0.366+0.08979*104.71975511*p-0.0337*104.71975511*p*p+0.0001*p*104.71975511*104.71975511))-1.592*(0.9*(-0.366+0.08979*104.71975511*p-0.0337*104.71975511*p*p+0.0001*p*104.71975511*104.71975511)) *1*((1/14.7)*(1+ivalue+0.04*(1*lam-14.7))*(-0.366+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))-lam)\n    dx[3] = 0.41328*(2*1*(247.0)*(-2.3421*p*p+2.7799*p-0.3273)-(-0.366+0.08979*104.71975511*pe-0.0337*104.71975511*pe*pe+0.0001*pe*104.71975511*104.71975511))\n    dx[4] = 0.14*(1*lam-14.7)\n    return dx\nend\n\nfunction powertrain_control_hybrid()\n    n = 4 + 1 # variables\n\n    automaton = LightAutomaton(2)\n    add_transition!(automaton, 1, 2, 1)\n\n    # mode 1 \"startup\"\n    invariant = HPolyhedron([HalfSpace(t >= 9.5, vars), HalfSpace(t <= 20, vars)])\n    mode1 = @system(x' = startup!(x), dim:5, x ∈ invariant)\n    # mode 1 \"normal\"\n    invariant = Universe(n)\n    mode2 = @system(x' = normal!(x), dim:5, x ∈ invariant)\n    modes = [mode1, mode2]\n\n    reset = Dict(n => 0.)\n\n    # transition startup -> normal\n    guard = HalfSpace(t >= 9.5, vars)\n    trans1 = ConstrainedResetMap(n, guard, reset)\n    resetmaps = [trans1]\n\n    return HybridSystem(automaton, modes, resetmaps, [AutonomousSwitching()])\nend\n\nfunction model(X0)\n    H = powertrain_control_hybrid()\n    return IVP(H, [(1, X0)])\nend\nend # module","category":"page"},{"location":"about/#About-1","page":"About","title":"About","text":"","category":"section"},{"location":"models/spiking_neuron/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/spiking_neuron/spiking_neuron.jl\"","category":"page"},{"location":"models/spiking_neuron/#","page":"-","title":"-","text":"module spiking_neuron\nusing ReachabilityAnalysis, ModelingToolkit\n\n@taylorize function flow!(dx, x, params, t)\n    local a = 0.02\n    local b = 0.2\n    local I = 40\n    dx[1] = (0.04*(x[1]*x[1]) + 5*x[1]) + ((140+I)-x[2])\n    dx[2] = a*((b*x[1]) - x[2])\n    return dx\nend\n\nfunction spikingNeuron_model()\n    # hybrid automaton\n    HA = LightAutomaton(1)\n\n    # mode 1\n    X = HPolyhedron([HalfSpace([1.0, 0.0], 30.0)])  # x1 ≤ 30\n    m1 = @system(x' = flow!(x), dim: 2, x ∈ X)\n\n    # transition mode 1 → mode 1 (self loop)\n    add_transition!(HA, 1, 1, 1)\n    G = HPolyhedron([HalfSpace([-1.0, 0.0], -30.0)])  # x1 ≥ 30\n    A = [0.0 0.0; 0.0 1.0]\n    b = [-65.0, 8.0]\n    R11 = ConstrainedAffineMap(A, b, G)  # x1 := -65, x2 := x2 + 8\n\n    # hybrid system\n    S = HybridSystem(HA, [m1], [R11], [AutonomousSwitching()])\n\n    return S\nend\n\nfunction model(X0)\n    H = spikingNeuron_model()\n    return IVP(H, X0)\nend\nend # module","category":"page"},{"location":"models/projectile/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/projectile/projectile.jl\"","category":"page"},{"location":"models/projectile/#","page":"-","title":"-","text":"module projectile\nusing ReachabilityAnalysis, SparseArrays\n\n# system matrix\nA = sparse([1, 3], [2, 4], [0.5, 0.7], 4, 4)\n\n# affine term\nb = sparsevec([4], [-9.81], 4)\n\nfunction model(X0)\n    S = @system(x' = Ax + b)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/mna5/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/mna5/mna5.jl\"","category":"page"},{"location":"models/mna5/#","page":"-","title":"-","text":"module mna5\n\nusing ReachabilityAnalysis, MAT, SparseArrays\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"mna5.mat\")","category":"page"},{"location":"models/mna5/#","page":"-","title":"-","text":"system matrix","category":"page"},{"location":"models/mna5/#","page":"-","title":"-","text":"A = sparse(read(file, \"A\"))","category":"page"},{"location":"models/mna5/#","page":"-","title":"-","text":"affine term","category":"page"},{"location":"models/mna5/#","page":"-","title":"-","text":"b = sparsevec(19:27, [fill(-0.1, 5); fill(-0.2, 4)], 10913)\n\nfunction model(X0)\n    S = @system(x' = Ax + b)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/robot_arm/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/robot_arm/robot_arm.jl\"","category":"page"},{"location":"models/robot_arm/#","page":"-","title":"-","text":"module robot_arm\nusing ReachabilityAnalysis\n@taylorize function robot_arm!(dx, x, params, t)\n    dx[1] = x[3]\n    dx[2] = x[4]\n    dx[3] = (-2x[2] * x[3] * x[4] - 2x[1] - 2x[3] + 4) / (x[2]^2 + 1)\n    dx[4] = x[2] * x[3]^2 - x[2] - x[4] + 1\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = robot_arm!(x), dim:4)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/buckling_column/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/buckling_column/buckling_column.jl\"","category":"page"},{"location":"models/buckling_column/#","page":"-","title":"-","text":"module buckling_column\nusing ReachabilityAnalysis\n@taylorize function buckling_column!(dx, x, params, t)\n    dx[1] = x[2]\n    dx[2] = 2 * x[1] - x[1]^3 - 0.2 * x[2] + 0.1\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = buckling_column!(x), dim:2)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/thermostat/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/thermostat/thermostat.jl\"","category":"page"},{"location":"models/thermostat/#","page":"-","title":"-","text":"module thermostat\n\nusing ReachabilityAnalysis, ModelingToolkit\n\nconst A1 = 40.0\nconst A2 = 30.0\nconst B = 0.5\nconst t1 = 75\nconst t2 = 65\n\nconst var = @variables t\n\nfunction thermostat_on()\n    invariant = HalfSpace(t <= t1)\n    @system(x' = -Bx + A1, x ∈ invariant)\nend\n\nfunction thermostat_off()\n    invariant = HalfSpace(t >= t2)\n    @system(x' = -Bx + A2, x ∈ invariant)\nend\n\nfunction thermostat_hybrid()\n    automaton = LightAutomaton(2)\n    add_transition!(automaton, 1, 2, 1)\n    add_transition!(automaton, 2, 1, 2)\n\n    mode1 = thermostat_on()\n    mode2 = thermostat_off()\n    modes = [mode1, mode2]\n\n    # transition on -> off\n    guard = HalfSpace(t >= t1)\n    trans1 = ConstrainedIdentityMap(1, guard)\n    # transition off -> on\n    guard = HalfSpace(t <= t2)\n    trans2 = ConstrainedIdentityMap(1, guard)\n    resetmaps = [trans1, trans2]\n\n    return HybridSystem(automaton, modes, resetmaps, [AutonomousSwitching()])\nend\n\nfunction model(X0)\n    H = thermostat_hybrid()\n    return IVP(H, X0)\nend\n\nend  # module","category":"page"},{"location":"models/mna1/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/mna1/mna1.jl\"","category":"page"},{"location":"models/mna1/#","page":"-","title":"-","text":"module mna1\n\nusing ReachabilityAnalysis, MAT, SparseArrays\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"mna1.mat\")","category":"page"},{"location":"models/mna1/#","page":"-","title":"-","text":"system matrix","category":"page"},{"location":"models/mna1/#","page":"-","title":"-","text":"A = sparse(read(file, \"A\"))","category":"page"},{"location":"models/mna1/#","page":"-","title":"-","text":"affine term","category":"page"},{"location":"models/mna1/#","page":"-","title":"-","text":"b = sparsevec(570:578, [fill(-0.1, 5); fill(-0.2, 4)], 578)\n\nfunction model(X0)\n    S = @system(x' = Ax + b)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/crane/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/crane/crane.jl\"","category":"page"},{"location":"models/crane/#","page":"-","title":"-","text":"module crane\nusing ReachabilityAnalysis\nA = [ 0.0           1.0               0.0   0.0   0.0           0.0;\n     -0.417533     -3.1931759963     39.24  0.0 -14.825331     11.123344;\n      0.0           0.0               0.0   1.0   0.0           0.0;\n      0.0417533     0.31931759963    -4.905 0.0   1.4825331    -1.1123344;\n      0.0638407957 -0.32473339016573  0.0   0.0  -3.7332068901 -0.7007592976;\n      0.0853437452 -0.72366802635628  0.0   0.0  -5.9714023436 -2.2736115136]\n\nfunction model(X0)\n    S = @system(x' = Ax)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/beam/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/beam/beam.jl\"","category":"page"},{"location":"models/beam/#","page":"-","title":"-","text":"module beam\n\nusing ReachabilityAnalysis, MAT\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"beam.mat\")","category":"page"},{"location":"models/beam/#","page":"-","title":"-","text":"system matrix","category":"page"},{"location":"models/beam/#","page":"-","title":"-","text":"A = read(file, \"A\")","category":"page"},{"location":"models/beam/#","page":"-","title":"-","text":"input matrix","category":"page"},{"location":"models/beam/#","page":"-","title":"-","text":"B = read(file, \"B\")","category":"page"},{"location":"models/beam/#","page":"-","title":"-","text":"state domain","category":"page"},{"location":"models/beam/#","page":"-","title":"-","text":"X = Universe(348)","category":"page"},{"location":"models/beam/#","page":"-","title":"-","text":"input domain","category":"page"},{"location":"models/beam/#","page":"-","title":"-","text":"U = BallInf([0.9], 0.1)\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/helicopter/#","page":"Helicopter","title":"Helicopter","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/helicopter/helicopter.jl\"","category":"page"},{"location":"models/helicopter/#Helicopter-1","page":"Helicopter","title":"Helicopter","text":"","category":"section"},{"location":"models/helicopter/#","page":"Helicopter","title":"Helicopter","text":"note: Overview\nSystem type: linear continuous system\nState dimension: 28\nApplication domain:","category":"page"},{"location":"models/helicopter/#","page":"Helicopter","title":"Helicopter","text":"This is a 28-dimensional controlled helicopter model from [REF].","category":"page"},{"location":"models/helicopter/#","page":"Helicopter","title":"Helicopter","text":"using ReachabilityAnalysis, SparseArrays\n\nfunction helicopter_A()\n    A = [[0, 0, 0, 0.998574, 0.0533843, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 1, -0.00318222, 0.0595247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, -11.5705, -2.54464, -0.0636026, 0.106781, -0.0949187, 0.00710757, -5.20818, -23.1259, -4.24693, -0.710744, -1.4867, -0.0445482, 0.0343664, 0.0229902, 0.580153, 1.04755, 11.265, 2.62228, 0.382949, 0.453076, 0.0226519, 0.0125336, 0.108399, -0.160139, -6.11536, -0.0389724],\n    [0, 0, 0.439357, -1.99818, 0, 0.0166519, 0.018462, -0.00118747, -10.7788, 0.343053, -0.0349493, -3.46674, 0.0134159, -0.00650175, -0.00724803, -0.00483591, -0.152495, 2.03915, -0.169614, -0.279125, -0.00367822, -0.00167971, 0.050812, 0.0432735, -0.0623053, 0.979163, 0.0404014, 0.010697],\n    [0, 0, -2.0409, -0.458999, -0.735028, 0.0192558, -0.00459562, 0.00212036, -1.06433, -3.65916, -0.493547, -0.0595611, -1.95351, -0.0109391, -0.000271004, 0.0505639, 1.58834, 0.219924, 1.82192, 2.69319, 0.0686196, 0.08631, 0.00241543, 0.000727041, 0.640964, -0.0230167, -1.06985, -0.596675],\n    [-32.1036, 0, -0.503355, 2.29786, 0, -0.0212158, -0.0211679, 0.0158116, 12.4592, -0.353637, 0.0641365, 4.03533, -0.272153, 0.00099959, 0.00252969, 0.111633, 2.73642, -2.35454, 0.175217, 0.863082, 0.00440128, 0.00437341, -0.059795, -0.0510055, 0.609532, -1.11578, -0.0263051, -0.0337389],\n    [0.102161, 32.0578, -2.34722, -0.503612, 0.834948, 0.0212266, -0.0378797, 0.000354004, -0.76148, -5.12933, -1.13138, -0.148788, 1.38074, -0.012931, 0.00764572, 0.0737967, 1.36175, 0.150701, 2.45244, -1.44884, 0.0765163, 0.0871226, 0.00462319, 0.00263523, -0.0794019, -0.0310234, -1.22553, 0.657926],\n    [-1.91097, 1.71383, -0.00400543, -0.0574112, 0, 0.0139896, -0.000906753, -0.290514, -2.06064, -0.774846, -0.471752, -1.21389, 5.03052, 0.126408, 0.113189, -2.07842, -50.1852, 0.340666, 0.375863, -10.6412, -0.00363415, -0.0479628, 0.0305097, 0.0275842, -10.5424, -0.126841, -0.391839, 0.420788],\n    [0.126296, -0.00289825, -0.319316, 0.785202, 0.00177237, 5.84372e-06, 5.23381e-06, -9.78995e-05, -0.0726115, 0.00166629, 0.195701, 0.517339, 0.0523653, -3.35973e-06, -3.00908e-06, 5.62854e-05, -0, -0, -0, -0, -0, 0, -0, 0, 0, 0, 0, 0],\n    [-0.0181141, 0.077615, 0.710897, 2.45428, -0.012793, 4.05106e-05, 3.62825e-05, -0.000678672, 0.0104143, -0.0446232, 0.564308, -1.50732, 0.0668797, -2.32908e-05, -2.08599e-05, 0.000390189, 0, 0, -0, -0, -0, 0, -0, 0, 0, 0, 0, 0],\n    [-0.0199573, 0.00710897, 122.639, 1.7917, 0.13833, 7.26169e-07, 6.50379e-07, -1.21655e-05, -8.48115, -37.7139, -93.6582, -4.80197, -2.56739, 0.0341383, -0.0388801, 0.0446032, 0.946017, 1.70817, 18.3691, 4.27597, 0.62445, 0.738801, 0.0369369, 0.0204377, 0.17676, -0.261129, -9.9719, -0.0635496],\n    [0.00785296, 0.00392575, 0.287856, 58.0535, 0.0306981, -6.8376e-06, -6.12396e-06, 0.00011455, -17.5807, 0.557136, 0.205947, -43.2308, 0.00422708, 0.00605385, 0.00664669, -0.00913893, -0.248663, 3.32511, -0.276579, -0.455151, -0.00599782, -0.00273899, 0.0828557, 0.0705632, -0.101597, 1.59665, 0.0658798, 0.0174429],\n    [0.0114973, -0.012583, 13.8484, 22.2888, 0.0422873, 0.000197559, 0.00017694, -0.00330969, -1.74214, -5.95951, -11.333, -14.2165, -3.9448, 0.00130458, -0.00513926, 0.0864743, 2.59, 0.358615, 2.97089, 4.3916, 0.111893, 0.14074, 0.00393867, 0.00118554, 1.04518, -0.0375318, -1.74453, -0.972958],\n    [-16.9391, 0.618054, 107.921, 204.524, 0.204408, 0.0047421, 0.00424717, -0.0794442, -2.04846, -0.93199, -66.5409, -116.47, -0.561301, -0.0223122, -0.0194847, 0.243519, 4.4621, -3.83939, 0.285714, 1.40737, 0.00717686, 0.00713142, -0.0975037, -0.0831712, 0.993922, -1.81943, -0.0428939, -0.0550157],\n    [-0.54281, 7.08182, -135.012, 460.929, 0.0364986, 0.00693724, 0.0062132, -0.116219, -0.827455, 19.6222, 78.5537, -283.239, 3.06544, -0.00384762, -0.0289845, 0.187507, 2.22051, 0.245738, 3.99902, -2.36252, 0.12477, 0.142065, 0.00753873, 0.0042971, -0.129475, -0.0505877, -1.99839, 1.07284],\n    [-1.28646, 0.142279, -1.26575, 65.7431, -1.3207, -0.061856, -0.0554001, 1.03627, -4.53149, 0.368539, 0.0024871, -42.3265, 8.96223, 0.255677, 0.215513, -4.27544, -81.8337, 0.5555, 0.612895, -17.3518, -0.00592597, -0.0782097, 0.0497501, 0.0449796, -17.1907, -0.206831, -0.638946, 0.686151],\n    [0, 0, 0, 0, 0, -0.00970226, -0.00868964, 0.162541, 0, 0, 0, 0, 0, 0, 0, 0, -0.012, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-8.15316, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -3.26127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0.174412, -3.26127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.01, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-0, 0, -3.26127, -0, -0, -0, -0, 0, 0, -0, -0, 0, 0, 0, 0, -0, 0, 0, 0, -0, -8.5, -18, 0, 0, 0, 0, 0, 0],\n    [0, 0, -0, -0, 0, -0, -0, 0, -0, 0, 0, 0, 0, 0, 0, -0, -0, -0, -0, -0, 1, 0, 0, 0, 0, 0, 0, 0],\n    [-0, 0, 0, -8.15316, -0, -0, -0, 0, 0, 0, -0, 0, 0, 0, 0, -0, -0, 0, -0, 0, -0, 0, -8.5, -18, 0, 0, 0, 0],\n    [0, 0, -0, -0, 0, -0, -0, 0, -0, 0, 0, 0, 0, 0, 0, -0, 0, -0, -0, -0, -0, 0, 1, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0.699961, 0.262038, 0.15959, 0.411552, -1.70162, -0.0427567, -0.0382852, 0.703046, 16.9757, -0.115788, -0.127109, 3.59954, 0.00122974, 0.0162237, -0.010334, -0.00934236, -6.43393, 0.0426396, 0.132541, -0.142338],\n    [0, 0, 0, 0, 0, 0, 0, 0, -37.0015, 0.783589, -0.183855, -11.8696, -0.106084, -0.0263066, -0.0271181, 0.036745, 0.764602, 7.00237, -0.390319, -0.642631, -0.00570167, 0.00352225, 0.173868, 0.147911, 0.0560927, -6.64198, 0.0396022, 0.0261817],\n    [0, 0, 0, 0, 0, 0, 0, 0, 1.9914, 13.76, 2.53042, 0.0825288, 0.728265, 0.0239028, -0.0228966, 0.0153276, 0.370477, -0.412566, -6.70095, -1.32704, -0.227019, -0.267482, -0.00865099, -0.00339436, 0.0987926, 0.197714, -6.3694, -0.0119768],\n    [0, 0, 0, 0, 0, 0, 0, 0, 1.96586, -3.74313, -1.96265, 0.0189294, 11.145, -0.036002, -0.00122215, 0.602488, 11.6398, -0.407673, 1.50774, -12.8, 0.0053931, -0.0142088, -0.000915158, -0.000640326, -0.0365353, 0.012459, -0.083125, -5.47283]]\n\n    return sparse(hcat(A...)')\nend\n\nfunction model(X0)\n    # system matrix\n    A = helicopter_A()\n\n    # linear continuous system\n    S = @system(x' = Ax)\n    return IVP(S, X0)\nend","category":"page"},{"location":"models/helicopter/#","page":"Helicopter","title":"Helicopter","text":"[REF]: XXX","category":"page"},{"location":"models/five_dim_sys/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/five_dim_sys/five_dim_sys.jl\"","category":"page"},{"location":"models/five_dim_sys/#","page":"-","title":"-","text":"module five_dim_sys\nusing ReachabilityAnalysis\n# system matrix\nD = [-1.0 -4.0  0.0  0.0  0.0;\n      4.0 -1.0  0.0  0.0  0.0;\n      0.0  0.0 -3.0  1.0  0.0;\n      0.0  0.0 -1.0 -3.0  0.0;\n      0.0  0.0  0.0  0.0 -2.0]\nP = [ 0.6 -0.1  0.1  0.7 -0.2;\n     -0.5  0.7 -0.1 -0.8  0.0;\n      0.9 -0.5  0.3 -0.6  0.1;\n      0.5 -0.7  0.5  0.6  0.3;\n      0.8  0.7  0.6 -0.3  0.2]\nA = P * D * inv(P)\n\n# state domain\nX = Universe(5)\n\n# input domain\nU = Ball2(zeros(5), 0.01)\n\nfunction model(X0)\n    S = @system(x' = Ax + u, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/lodka_volterra/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/lodka_volterra/lodka_volterra.jl\"","category":"page"},{"location":"models/lodka_volterra/#","page":"-","title":"-","text":"module lodka_volterra\nusing ReachabilityAnalysis\n@taylorize function lodka_volterra!(du, u, p, t)\n    local α, β, γ, δ = 1.5, 1.0, 3.0, 1.0\n    du[1] = u[1] * (α - β*u[2])\n    du[2] = -u[2] * (γ - δ*u[1])\n    return du\nend\n\nfunction model(X0)\n    S = @system(x' = lodka_volterra!(x), dim:2)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/motor/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/motor/motor.jl\"","category":"page"},{"location":"models/motor/#","page":"-","title":"-","text":"module motor\n\nusing ReachabilityAnalysis, SparseArrays\nusing ReachabilityModels: @relpath","category":"page"},{"location":"models/motor/#","page":"-","title":"-","text":"system matrix","category":"page"},{"location":"models/motor/#","page":"-","title":"-","text":"I = [1, 2, 2, 3, 3, 3, 3, 4, 5, 6, 6, 7, 7, 7, 7, 8]\nJ = [2, 3, 2, 1, 2, 3, 4, 1, 6, 7, 6, 5, 6, 7, 8, 5]\nV = [1, 8487.2, -1.0865, -2592.1, -21.119, -698.91, -141399.0, 1.0, 1.0,\n     8487.2, -1.0865, -2592.1, -21.119, -698.91, -141399.0, 1.0]\nA = sparse(I, J, V)","category":"page"},{"location":"models/motor/#","page":"-","title":"-","text":"input matrix","category":"page"},{"location":"models/motor/#","page":"-","title":"-","text":"B = sparse([4, 8], [1, 2], [-1.0, -1.0])","category":"page"},{"location":"models/motor/#","page":"-","title":"-","text":"state domain","category":"page"},{"location":"models/motor/#","page":"-","title":"-","text":"X = Universe(8)","category":"page"},{"location":"models/motor/#","page":"-","title":"-","text":"input domain","category":"page"},{"location":"models/motor/#","page":"-","title":"-","text":"U = Hyperrectangle([0.23, 0.3], [0.07, 0.1])\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/vanderpol/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/vanderpol/vanderpol.jl\"","category":"page"},{"location":"models/vanderpol/#","page":"-","title":"-","text":"module vanderpol\nusing ReachabilityAnalysis\n@taylorize function vanderpol!(dx, x, params, t)\n    local μ = 1.0\n    dx[1] = x[2]\n    dx[2] = (μ * x[2]) * (1 - x[1]^2) - x[1]\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = vanderpol!(x), dim:2)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/cdplayer/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/cdplayer/cdplayer.jl\"","category":"page"},{"location":"models/cdplayer/#","page":"-","title":"-","text":"module cdplayer\n\nusing ReachabilityAnalysis, MAT\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"cdplayer.mat\")","category":"page"},{"location":"models/cdplayer/#","page":"-","title":"-","text":"system matrix","category":"page"},{"location":"models/cdplayer/#","page":"-","title":"-","text":"A = read(file, \"A\")","category":"page"},{"location":"models/cdplayer/#","page":"-","title":"-","text":"input matrix","category":"page"},{"location":"models/cdplayer/#","page":"-","title":"-","text":"B = read(file, \"B\")","category":"page"},{"location":"models/cdplayer/#","page":"-","title":"-","text":"state domain","category":"page"},{"location":"models/cdplayer/#","page":"-","title":"-","text":"X = Universe(120)","category":"page"},{"location":"models/cdplayer/#","page":"-","title":"-","text":"input domain","category":"page"},{"location":"models/cdplayer/#","page":"-","title":"-","text":"U = BallInf([0.0, 0.0], 1.0)\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/steam_governor/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/steam_governor/steam_governor.jl\"","category":"page"},{"location":"models/steam_governor/#","page":"-","title":"-","text":"module steam_governor\nusing ReachabilityAnalysis\n@taylorize function steam_governor!(du, u, p, t)\n    local ϵ = 3.0\n    local α = 1.0\n    local β = 1.0\n\n    du[1] = u[2]\n    du[2] = u[3]^2 * sin(u[1]) * cos(u[1]) - sin(u[1]) - ϵ*u[2]\n    du[3] = α*(cos(u[1]) - β)\n\n    return du\nend\n\nfunction model(X0)\n    S = @system(x' = steam_governor!(x), dim:3)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/elipse/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/elipse/elipse.jl\"","category":"page"},{"location":"models/elipse/#","page":"-","title":"-","text":"module elipse\nusing ReachabilityAnalysis\nA = [3.0 -9.0;\n     4.0 -3.0]\n\nfunction model(X0)\n    S = @system(x' = Ax)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/cardiac_cell/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/cardiac_cell/cardiac_cell.jl\"","category":"page"},{"location":"models/cardiac_cell/#","page":"-","title":"-","text":"module cardiac_cell\nusing ReachabilityAnalysis, ModelingToolkit\n\nvars = @variables u, v, t\n\n@taylorize function cardiac_cell_on!(dx, x, params, t)\n    dx[1] = -0.9 * x[1]^2 - x[1]^3 - 0.9 * x[1] - x[2] + 1\n    dx[2] = x[1] - 2 * x[2]\n    dx[3] = one(x[3])\n    return dx\nend\n\n@taylorize function cardiac_cell_off!(dx, x, params, t)\n    dx[1] = -0.9 * x[1]^2 - x[1]^3 - 0.9 * x[1] - x[2]\n    dx[2] = x[1] - 2 * x[2]\n    dx[3] = one(x[3])\n    return dx\nend\n\nfunction cardiac_cell_hybrid()\n\n    n = 2 + 1 # variables + time\n\n    automaton = LightAutomaton(2)\n    add_transition!(automaton, 1, 2, 1)\n    add_transition!(automaton, 2, 1, 2)\n\n    # mode 1 \"approaching\"\n    invariant = HalfSpace(t <= 5, vars)\n    mode1 = @system(x' = cardiac_cell_on!(x), dim:3, x ∈ invariant)\n    # mode 1 \"approaching\"\n    invariant = HalfSpace(t <= 20, vars)\n    mode2 = @system(x' = cardiac_cell_off!(x), dim:3, x ∈ invariant)\n    modes = [mode1, mode2]\n\n    reset = Dict(n => 0.)\n\n    # transition on -> off\n    guard = HalfSpace(t >= 5)\n    trans1 = ConstrainedResetMap(n, guard, reset)\n    # transition off -> on\n    guard = HalfSpace(t >= 20)\n    trans2 = ConstrainedResetMap(n, guard, reset)\n    resetmaps = [trans1, trans2]\n\n    return HybridSystem(automaton, modes, resetmaps, [AutonomousSwitching()])\nend\n\nfunction model(X0)\n    H = cardiac_cell_hybrid()\n    return IVP(H, X0)\nend\nend # module","category":"page"},{"location":"usage/#Usage-1","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"usage/#Utility-functions-1","page":"Usage","title":"Utility functions","text":"","category":"section"},{"location":"usage/#","page":"Usage","title":"Usage","text":"","category":"page"},{"location":"usage/#","page":"Usage","title":"Usage","text":"Modules = [ReachabilityModels]","category":"page"},{"location":"usage/#ReachabilityModels.@relpath-Tuple{String}","page":"Usage","title":"ReachabilityModels.@relpath","text":"@relpath(name) Return the absolute path to file name relative to the executing script.\n\nInput\n\nname – file name\n\nOutput\n\nA string.\n\nNotes\n\nThis macro is equivalent to joinpath(@__DIR__, name). The @relpath macro is used in model scripts to load data files relative to the location of the model, without having to change the directory of the Julia session. For instance, suppose that the folder /home/projects/models contains the script my_model.jl, and suppose that the data file my_data.dat located in the same directory is required to be loaded by my_model.jl. Then,\n\n# suppose the working directory is /home/julia/ and so we ran the script as\n# julia -e \"include(\"../projects/models/my_model.jl\")\"\n# in the model file /home/projects/models/my_model.jl we write:\nd = open(@relpath \"my_data.dat\")\n# do stuff with d\n\nIn this example, the macro @relpath \"my_data.dat\" evaluates to the string /home/projects/models/my_data.dat. If the script my_model.jl only had d = open(\"my_data.dat\"), without @relpath, this command would fail as julia would have looked for my_data.dat in the working directory, resulting in an error that the file /home/julia/my_data.dat is not found.\n\n\n\n\n\n","category":"macro"},{"location":"models/biomodel7d/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/biomodel7d/biomodel7d.jl\"","category":"page"},{"location":"models/biomodel7d/#","page":"-","title":"-","text":"module biomodel7d\nusing ReachabilityAnalysis\n\n@taylorize function biomodel7d!(dx, x, p, t)\n    dx[1] = -0.4 * x[1] + 5.0 * x[3] * x[4]\n    dx[2] = 0.4 * x[1] - x[2]\n    dx[3] = x[2] - 5.0 * x[3] * x[4]\n    dx[4] = 5.0 * x[5] * x[6] - 5.0 * x[3] * x[4]\n    dx[5] = -5.0 * x[5] * x[6] + 5.0 * x[3] * x[4]\n    dx[6] = 0.5 * x[7] - 5.0 * x[5] * x[6]\n    dx[7] = -0.5 * x[7] + 5.0 * x[5] * x[6]\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = biomodel7d!(x), dim:7)\n    return IVP(S, X0)\nend\nend #module","category":"page"},{"location":"models/doublegyre/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/doublegyre/doublegyre.jl\"","category":"page"},{"location":"models/doublegyre/#","page":"-","title":"-","text":"module doublegyre\nusing ReachabilityAnalysis\n@taylorize function doublegyre!(dx, x, params, t)\n    local A = 0.1\n    dx[1] = -π*A*sin(π*x[1])*cos(π*x[2])\n    dx[2] = π*A*cos(π*x[1])*sin(π*x[2])\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = doublegyre!(x), dim:2)\n    return IVP(S, X0)\nend\nend # module","category":"page"},{"location":"models/iss/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/iss/iss.jl\"","category":"page"},{"location":"models/iss/#","page":"-","title":"-","text":"module iss\n\nusing ReachabilityAnalysis, MAT\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"iss.mat\")","category":"page"},{"location":"models/iss/#","page":"-","title":"-","text":"system matrix","category":"page"},{"location":"models/iss/#","page":"-","title":"-","text":"A = read(file, \"A\")","category":"page"},{"location":"models/iss/#","page":"-","title":"-","text":"input matrix","category":"page"},{"location":"models/iss/#","page":"-","title":"-","text":"B = read(file, \"B\")","category":"page"},{"location":"models/iss/#","page":"-","title":"-","text":"state domain","category":"page"},{"location":"models/iss/#","page":"-","title":"-","text":"X = Universe(270)","category":"page"},{"location":"models/iss/#","page":"-","title":"-","text":"input domain","category":"page"},{"location":"models/iss/#","page":"-","title":"-","text":"U = Hyperrectangle([0.05, 0.9, 0.95], [0.05, 0.1, 0.05])\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/navigation_system/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/navigation_system/navigation_system.jl\"","category":"page"},{"location":"models/navigation_system/#","page":"-","title":"-","text":"module navigation_system\n\nusing ReachabilityAnalysis, ModelingToolkit\n\nconst var = @variables x, y, v_x, v_y\n\nfunction mode0()\n    A = [0 0   1    0 ;\n         0 0   0    1 ;\n         0 0 -1.2  0.1;\n         0 0  0.1 -1.2]\n    B = [0, 0, -0.1, 1.2]\n    invariant = HPolyhedron([HalfSpace(x <= 1 || v_x <= 0),\n                            HalfSpace(y <= 1 || v_y <= 0)])\n    @system(x' = Ax + B, x ∈ invariant)\nend\n\nfunction mode1()\n    A = [0 0   1    0 ;\n         0 0   0    1 ;\n         0 0 -1.2  0.1;\n         0 0  0.1 -1.2]\n    B = [0, 0, -4.8, 0.4]\n    invariant = HPolyhedron([HalfSpace(x >= 1 || v_x <= 0),\n                            HalfSpace(y <= 1 || v_y <= 0)])\n    @system(x' = Ax + B, x ∈ invariant)\nend\n\nfunction mode2()\n    A = [0 0   1    0 ;\n         0 0   0    1 ;\n         0 0 -1.2  0.1;\n         0 0  0.1 -1.2]\n    B = [0, 0, 2.4, -0.2]\n    invariant = HPolyhedron([HalfSpace(x <= 1 || v_x <= 0),\n                            HalfSpace(y >= 1 || v_y >= 0)])\n    @system(x' = Ax + B, x ∈ invariant)\nend\n\nfunction mode3()\n    A = [0 0   1    0 ;\n         0 0   0    1 ;\n         0 0 -1.2  0.1;\n         0 0  0.1 -1.2]\n    B = [0, 0, 3.9, -3.9]\n    invariant = HPolyhedron([HalfSpace(x >= 1 || v_x >= 0),\n                            HalfSpace(y >= 1 || v_y >= 0)])\n    @system(x' = Ax + B, x ∈ invariant)\nend\n\nfunction navigation_system_hybrid()\n    automaton = LightAutomaton(4)\n    add_transition!(automaton, 1, 2, 1)\n    add_transition!(automaton, 2, 1, 2)\n    add_transition!(automaton, 2, 4, 3)\n    add_transition!(automaton, 4, 2, 4)\n    add_transition!(automaton, 1, 3, 5)\n    add_transition!(automaton, 3, 1, 6)\n    add_transition!(automaton, 3, 4, 7)\n    add_transition!(automaton, 4, 3, 8)\n\n    mode1 = mode0()\n    mode2 = mode1()\n    mode3 = mode2()\n    mode4 = mode3()\n    modes = [mode1, mode2, mode3, mode4]\n\n    # transition 1 -> 2\n    guard = HPolyhedron([HalfSpace(x >= 1), HalfSpace(v_x >= 0)])\n    trans1 = ConstrainedIdentityMap(4, guard)\n    # transition 2 -> 1\n    guard = HPolyhedron([HalfSpace(x <= 1), HalfSpace(v_x <= 0)])\n    trans2 = ConstrainedIdentityMap(4, guard)\n    # transition 2 -> 4\n    guard = HPolyhedron([HalfSpace(y >= 1), HalfSpace(v_y >= 0)])\n    trans3 = ConstrainedIdentityMap(4, guard)\n    # transition 4 -> 2\n    guard = HPolyhedron([HalfSpace(y <= 1), HalfSpace(v_y <= 0)])\n    trans4 = ConstrainedIdentityMap(4, guard)\n    # transition 1 -> 3\n    guard = HPolyhedron([HalfSpace(y >= 1), HalfSpace(v_y >= 0)])\n    trans5 = ConstrainedIdentityMap(4, guard)\n    # transition 3 -> 1\n    guard = HPolyhedron([HalfSpace(y <= 1), HalfSpace(v_y <= 0)])\n    trans6 = ConstrainedIdentityMap(4, guard)\n    # transition 3 -> 4\n    guard = HPolyhedron([HalfSpace(x >= 1), HalfSpace(v_x >= 0)])\n    trans7 = ConstrainedIdentityMap(4, guard)\n    # transition 4 -> 3\n    guard = HPolyhedron([HalfSpace(x <= 1), HalfSpace(v_x <= 0)])\n    trans8 = ConstrainedIdentityMap(4, guard)\n    resetmaps = [trans1, trans2, trans3, trans4, trans5, trans6, trans7, trans8]\n\n    return HybridSystem(automaton, modes, resetmaps, [AutonomousSwitching()])\nend\n\nfunction model(X0)\n    H = navigation_system_hybrid()\n    return IVP(H, [(1, X0)])\nend\n\nend  # module","category":"page"},{"location":"models/building/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/building/building.jl\"","category":"page"},{"location":"models/building/#","page":"-","title":"-","text":"module building\n\nusing ReachabilityAnalysis, MAT\nusing ReachabilityModels: @relpath\n\nfile = matopen(@relpath \"building.mat\")","category":"page"},{"location":"models/building/#","page":"-","title":"-","text":"system matrix","category":"page"},{"location":"models/building/#","page":"-","title":"-","text":"A = read(file, \"A\")","category":"page"},{"location":"models/building/#","page":"-","title":"-","text":"input matrix","category":"page"},{"location":"models/building/#","page":"-","title":"-","text":"B = read(file, \"B\")","category":"page"},{"location":"models/building/#","page":"-","title":"-","text":"state domain","category":"page"},{"location":"models/building/#","page":"-","title":"-","text":"X = Universe(48)","category":"page"},{"location":"models/building/#","page":"-","title":"-","text":"input domain","category":"page"},{"location":"models/building/#","page":"-","title":"-","text":"U = BallInf([0.5], 0.3)\n\nfunction model(X0)\n    S = @system(x' = Ax + Bu, x ∈ X, u ∈ U)\n    return IVP(S, X0)\nend\n\nend  # module","category":"page"},{"location":"models/biomodel9d/#","page":"-","title":"-","text":"EditURL = \"https://github.com/JuliaReach/ReachabilityModels.jl/blob/master/src/models/biomodel9d/biomodel9d.jl\"","category":"page"},{"location":"models/biomodel9d/#","page":"-","title":"-","text":"module biomodel9d\nusing ReachabilityAnalysis\n\n@taylorize function biomodel9d!(dx, x, p, t)\n    dx[1] = 3.0*x[3] - x[1]*x[6]\n    dx[2] = x[4] - x[2]*x[6]\n    dx[3] = x[1]*x[6] - 3.0*x[3]\n    dx[4] = x[2]*x[6] - x[4]\n    dx[5] = 3.0*x[3] + 5.0*x[1] - x[5]\n    dx[6] = 5.0*x[5] + 3.0*x[3] + x[4] - x[6]*(x[1]+x[2]+2.0*x[8]+1.0)\n    dx[7] = 5.0*x[4] + x[2] - 0.5*x[7]\n    dx[8] = 5.0*x[7] - 2.0*x[6]*x[8] + x[9] - 0.2*x[8]\n    dx[9] = 2.0*x[6]*x[8] - x[9]\n    return dx\nend\n\nfunction model(X0)\n    S = @system(x' = biomodel9d!(x), dim:9)\n    return IVP(S, X0)\nend\nend #module","category":"page"},{"location":"#ReachabilityModels.jl-1","page":"Home","title":"ReachabilityModels.jl","text":"","category":"section"}]
}
